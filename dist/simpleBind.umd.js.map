{"version":3,"file":"simpleBind.umd.js","sources":["../src/bindTypes/const/objNameLocation.js","../src/simpleBindUtil.js","../src/state.js","../src/simpleBind.js","../src/bindTypes/simplebind.js","../src/bindTypes/simplebindclass.js","../src/bindTypes/simplebindhandler.js","../src/bindTypes/simplebindvalue.js","../src/bindTypes/simplerepeat.js","../src/bindTypes/simpleevent.js","../src/bindTypes/simplebindattrs.js","../src/bindTypes/simpledata.js","../src/bindAugmenters/filters.js"],"sourcesContent":["export const FIRST_IN_STRING = 'FIRST_IN_STRING';\nexport const COLON_SEPARATED_SECOND_GROUP = 'COLON_SEPARATED_SECOND_GROUP';\nexport const COLON_SEPARATED_THIRD_GROUP = 'COLON_SEPARATED_THIRD_GROUP';","import * as objNameLocations from './bindTypes/const/objNameLocation';\n\nvar getType = function(variable) {\n  var type = typeof variable;\n  switch(type) {\n    case 'object':\n      if(variable == null) return 'null';\n      return variable instanceof Array ? 'array' : type;\n    default:\n      return type;\n  }\n};\n\nexport var delay = (function(){\n  var timer = 0;\n  return function(callback, ms){\n    clearTimeout (timer);\n    timer = setTimeout(callback, ms);\n  };\n})();\n\nvar copyArrayWithoutReferences = function (arr) {\n  var toReturn = [];\n  for (var i = 0; i < arr.length; ++i) {\n    var type = getType(arr[i]);\n    switch (type) {\n      case 'object':\n        toReturn.push(extend({}, arr[i]));\n        break;\n      case 'array':\n        toReturn.push(copyArrayWithoutReferences(arr[i]));\n        break;\n      default:\n        toReturn.push(arr[i]);\n        break;\n    }\n  }\n  return toReturn;\n};\n\nexport var extend = function() {\n  for (var i = 1, len = arguments.length; i < len; ++i) {\n    var src = arguments[i]\n      , target = arguments[0];\n    for (var key in src) {\n      var isArrayPresent = getType(src[key]) === 'array';\n      var simpleExtend = getType(target[key]) != 'object' && getType(src[key]) != 'object' && !isArrayPresent;\n      if (simpleExtend) {\n        target[key] = src[key];\n      } else {\n        target[key] = extend(typeof target[key] == 'undefined' ? { } : target[key],src[key]);\n        if (isArrayPresent) {\n          target[key] = copyArrayWithoutReferences(src[key]);\n        } else {\n          target[key] = extend(typeof target[key] == 'undefined' ? {} : target[key], src[key]);\n        }\n      }\n    }\n  }\n  return arguments.length ? arguments[0] : { };\n};\n\nexport var getKeys = function(obj) {\n  if(Object.keys) {\n    return Object.keys(obj);\n  } else {\n    arr = [];\n    for(var key in obj) {\n      arr.push(key);\n    }\n    return arr;\n  }\n};\n\nexport var getData = function(elem) {\n  var attrs, keys, data = { };\n  attrs = getAttrs(elem);\n  keys = getKeys(attrs);\n  for(var i=0; i < keys.length; ++i) {\n    if(keys[i].indexOf('data-') === 0) {\n      data[keys[i].substring(5,keys[i].length)] = attrs[keys[i]];\n    }\n  }\n  return data;\n};\n\nexport var getAttrs = function(elem) {\n  var attrs, obj = {};\n  attrs = elem.attributes;\n  for(var i=0; i < attrs.length; ++i) {\n    var attr = attrs.item(i);\n    obj[attr.nodeName] = (attr.hasOwnProperty('value')) ? attr.value : attr.nodeValue;\n  }\n  return obj;\n};\n\n// A great function for setting object values\n// via a string with dot notation:\n// ex) set({x:{y:{z:2}}},'y.z',3)\n\n// set = function(obj,str,val) {\n//   str = str.split('.');\n//   while(str.length > 1) {\n//     obj = obj[str.shift()];\n//   }\n//   obj[str.shift()] = val;\n// };\n\n// let's modify this function to be able to\n// build an object so we could have SEO friendly\n// binds and so that people don't have to rush\n// to bind their objects immediately\nexport var set = function(obj,str,val) {\n  str = str.split('.');\n  var finalProp = str.pop();\n  while(str.length) {\n    var key = str.shift();\n    obj[key] = typeof obj[key] == 'undefined' ? { } : obj[key];\n    obj = obj[key];\n  }\n  obj[finalProp] = val;\n};\n\n// Same as above but retrieves the value as a string or as an empty string\n// if not set:\nexport var get = function(obj,str) {\n  if(str == '$base' || str === '') return obj;\n  str = str.split('.');\n  for(var i=0; i < str.length; ++i) {\n    if(str[i] == '$base') {\n      return obj;\n    } else if(obj == null) {\n      return '';\n    } else if(typeof obj[str[i]] == 'undefined') {\n      return '';\n    } else {\n      if(obj === null) {\n        return '';\n      } else {\n        obj = obj[str[i]];\n      }\n    }\n  }\n  return obj;\n};\n\nfunction escapeRegExp(string) {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\n}\n\nlet replaceObjNameInBindingStrSingular = (location,oldName,newName) => str => { \n  switch(location) { \n    case objNameLocations.FIRST_IN_STRING: \n      str = str.replace(new RegExp(`^${escapeRegExp(oldName)}(\\.)?`), `${newName}$1`);\n      return str; \n    case objNameLocations.COLON_SEPARATED_SECOND_GROUP: \n      str = str.replace(new RegExp(`^([^:]+:)${escapeRegExp(oldName)}(\\\\.)?`),`$1${newName}$2`);\n      return str; \n    case objNameLocations.COLON_SEPARATED_THIRD_GROUP: \n      str = str.replace(new RegExp(`^([^:]+:[^:]+:)${escapeRegExp(oldName)}(\\\\.)?`),`$1${newName}$2`);\n      return str; \n  }\n};\n\nexport function replaceObjNameInBindingStr(str,bindTypeOpts,oldName,newName) { \n  return str.split(',')\n            .map(replaceObjNameInBindingStrSingular(bindTypeOpts.objNameLocation,oldName,newName))\n            .join(','); \n}\n\nexport var triggerEvent = function(elem,type){\n  if('createEvent' in document) {\n    var evt = document.createEvent('HTMLEvents');\n    evt.initEvent(type,false,true);\n    elem.dispatchEvent(evt);\n  } else {\n    elem.fireEvent('on' + type);\n  }\n};","export default { \n  bindTypes: [ ], \n  bindTypeOpts: { }, \n  boundElems: { }, \n  boundObjects: { }, \n  boundObjectsLast: { }, \n  ready: false,\n  beforeReadyBindQueue: [ ], \n  autoReBinding: false, \n  autoReBindingQueue: { }, \n  plugins: []\n};","import * as util from './simpleBindUtil';\nimport state from './state';\n\nvar d = document;\n\nvar init = function() { \n  domCollection();\n  state.ready = true; \n  if(state.beforeReadyBindQueue.length) { \n    for(var i=0; i < state.beforeReadyBindQueue.length; ++i) { \n      lib.bind(state.beforeReadyBindQueue[i].name,state.beforeReadyBindQueue[i].obj);\n    }\n  }\n}; \n\nvar domCollection = function(base,autoReBind=false) { \n  if(autoReBind) { \n    state.autoReBinding = true; \n    state.autoReBindingQueue = { }; \n  } \n  base = (typeof base == 'undefined') ? d : base;\n  var all = base.getElementsByTagName('*');\n  for(var i=0; i < all.length; ++i) {\n    var opts = util.getData(all[i]);\n    if(typeof opts['simplebindcollected'] == 'undefined') { \n      var foundBinding = false; \n      for(var j=0; j < state.bindTypes.length; ++j) { \n        if(typeof opts[state.bindTypes[j]] != 'undefined') { \n          if(!foundBinding) { \n            foundBinding = true;  \n            all[i].setAttribute('data-simplebindcollected','true'); \n          }\n          opts.bindType = state.bindTypes[j]; \n          state.bindTypeOpts[state.bindTypes[j]].collection(all[i],opts); \n        }\n      }\n    }\n  }\n  if(autoReBind) { \n    state.autoReBinding = false; \n    processAutoRebindingQueue(); \n  } \n}; \n\nvar processBoundElems = function(elems,obj,flush) { \n  flush = typeof flush == 'undefined' ? false : flush;\n  for(var i=0; i < elems.length; ++i) { \n    if(state.bindTypeOpts[elems[i].bindType].binding) { \n      state.bindTypeOpts[elems[i].bindType].binding(elems[i],obj,flush); \n    }\n  }\n}; \n\nvar processAutoRebindingQueue = function() { \n  for(var key in state.autoReBindingQueue) { \n    if(typeof state.boundObjects[key] != 'undefined') { \n      processBoundElems(state.autoReBindingQueue[key],state.boundObjects[key],true);\n    }\n  }\n}; \n\nvar processBindings = function(objName,obj) { \n  if(typeof state.boundObjectsLast[objName] == 'undefined') state.boundObjectsLast[objName] = { }; \n  state.boundObjects[objName] = obj; \n  if(typeof state.boundElems[objName] != 'undefined') { \n    processBoundElems(state.boundElems[objName],obj); \n    state.boundObjectsLast[objName] = util.extend({},obj);\n  }\n}; \n\nlet processPlugins = (lifecycleHook,...args) => {\n  switch(lifecycleHook) { \n    case 'preBind': \n    case 'postBind': \n      let [objName,obj] = args;\n      state.plugins.forEach(plugin => obj = typeof plugin[lifecycleHook] == 'function' \n        ? plugin[lifecycleHook].apply(null,args)\n        : obj\n      )\n      return obj;\n  }\n};\n\nd.addEventListener('DOMContentLoaded',function(){\n  init();\n}); \n\nvar lib = window.simpleBind || {}; \n\nlib.util = util;\n\nlib.getState = function() { \n  return state;\n}; \n\nlet defaultBindTypeOpts = { \n  binding: null\n}; \n\nlib.registerBindType = function(selector,opts) { \n  if(typeof state.bindTypeOpts[selector] == 'undefined') { \n    state.bindTypeOpts[selector] = { }; \n    state.bindTypes.push(selector); \n  }\n  util.extend(state.bindTypeOpts[selector],defaultBindTypeOpts,opts);\n}; \n\nlib.addToBoundElems = function(bindType,objName,configObj) { \n  configObj.bindType = bindType; \n  if(typeof state.boundElems[objName] == 'undefined') state.boundElems[objName] = []; \n  if(state.autoReBinding) { \n    if(typeof state.autoReBindingQueue[objName] == 'undefined') state.autoReBindingQueue[objName] = []; \n    state.autoReBindingQueue[objName].push(configObj);      \n  }\n  state.boundElems[objName].push(configObj); \n}; \n\nlib.recollectDOM = function(context,autoReBind) { \n  domCollection(context,autoReBind);\n}; \n\n\nlet pluginDefaults = { \n  preBind: null,\n  postBind: null,\n  name: ''\n}; \n\nlib.registerPlugin = (opts={}) => { \n  state.plugins.push(util.extend({},pluginDefaults,opts));\n}; \n\nlib.bind = function(objName,obj) {\n  if(typeof objName == 'string' && typeof obj != 'undefined') {\n    if(typeof state.boundElems[objName] == 'undefined') state.boundElems[objName] = [];\n    if(state.ready) { \n      obj = processPlugins('preBind',objName,obj); \n      processBindings(objName,obj);\n      obj = processPlugins('postBind',objName,obj);\n    } else { \n      state.beforeReadyBindQueue.push({name: objName, obj: obj});\n    }\n  }\n}; \n\nlib.extendNamespace = function(name,method) { \n  lib[name] = method;\n}; \n\nexport default lib; ","import state from '../state';\nimport simpleBind from '../simpleBind';\nimport { FIRST_IN_STRING } from './const/objNameLocation';\n\nvar collection = function(elem,opts){\n  // collection routine, the function that defines the object stored in boundElems\n  opts.simplebind = opts.simplebind.split('.');\n  var configObj = {\n    elem: elem,\n    objName: opts.simplebind.shift(),\n    objKey: opts.simplebind.join('.'),\n    opts: opts\n  };\n  simpleBind.addToBoundElems('simplebind',configObj.objName,configObj);\n};\n\nvar binding = function(config,obj,flush){\n  // binding routine, the function that determines how binding is done for this bind type\n  var val = simpleBind.util.get(obj,config.objKey);\n  var oldVal = simpleBind.util.get(state.boundObjectsLast[config.objName],config.objKey);\n  if(val !== oldVal || flush) {\n    if(typeof config.opts['simplefilter'] != 'undefined') {\n      val = simpleBind.getFilteredValue(val,config.opts.simplefilter);\n    }\n    val = typeof val == 'string' ? val : JSON.stringify(val,null,2);\n    if(typeof config.opts['simplebindhtml'] != 'undefined' && config.opts.simplebindhtml==\"true\") {\n      config.elem.innerHTML = val;\n    } else {\n      if(config.elem.childNodes.length) {\n        config.elem.childNodes[0].nodeValue = val;\n      } else {\n        config.elem.appendChild(document.createTextNode(val));\n      }\n    }\n  }\n};\n\n// uses default objNameRegex ('data-simplebind=\"objName.objKey\"')\nsimpleBind.registerBindType('simplebind',{\n  collection, \n  binding,\n  objNameLocation: FIRST_IN_STRING\n});","import simpleBind from '../simpleBind';\nimport { COLON_SEPARATED_SECOND_GROUP } from './const/objNameLocation';\nlet { addToBoundElems, registerBindType } = simpleBind;\nlet state = simpleBind.getState();\n\n/**\n * Takes form: data-simplebindclass='a-class-name:objName.someBool,class-name2:objName.someBool2'\n * (when boolean is true, class name will be applied, otherwise removed)\n */\n\nlet conf = { \n  collection(elem,opts) { \n    opts.simplebindclass.split(',').forEach((str) => {\n      let classNames = str.match(/^([^:]+):/);\n      let objName = str.match(/:([^\\.]+)\\./);\n      let objKey = str.match(/:[^\\.]+\\.(.*)$/);\n      if(!classNames || !objName || !objKey) return;\n      let configObj = { \n        elem: elem,\n        classNames: classNames[1].split(/\\s+/), \n        objName: objName[1],\n        objKey: objKey[1]\n      };\n      addToBoundElems('simplebindclass',configObj.objName,configObj);\n    });\n  },\n  binding(config,obj,flush) { \n    let val = simpleBind.util.get(obj,config.objKey)\n      , oldVal = simpleBind.util.get(state.boundObjectsLast[config.objName],config.objKey);\n    if(val != oldVal || flush) {\n      config.elem.classList[val == true ? 'add' : 'remove'](...config.classNames);\n    }\n  },\n  objNameLocation: COLON_SEPARATED_SECOND_GROUP\n};\n\nregisterBindType('simplebindclass',conf);","import state from '../state';\nimport simpleBind from '../simpleBind';\nimport { COLON_SEPARATED_SECOND_GROUP } from './const/objNameLocation';\n\nstate.bindHandlers = { };\n\nvar collection = function(elem,opts){\n  // collection routine, the function that defines the object stored in boundElems\n  var bindHandlers = opts.simplebindhandler.split(',');\n  for(var i=0; i < bindHandlers.length; ++i) {\n    bindHandlers[i] = bindHandlers[i].split(':');\n    var configObj = {\n      elem: elem,\n      handler: bindHandlers[i].shift()\n    };\n    bindHandlers[i] = bindHandlers[i].shift().split('.');\n    configObj.objName = bindHandlers[i].shift();\n    configObj.objKey = bindHandlers[i].join('.');\n    simpleBind.addToBoundElems('simplebindhandler',configObj.objName,configObj);\n  }\n};\n\nvar binding = function(config,obj,flush){\n  // binding routine, the function that determines how binding is done for this bind type\n  if(typeof state.bindHandlers[config.handler] != 'undefined') {\n    var val = simpleBind.util.get(obj,config.objKey)\n      , oldVal = simpleBind.util.get(state.boundObjectsLast[config.objName],config.objKey);\n    var change = typeof val == 'object' ? JSON.stringify(val) != JSON.stringify(oldVal) : val != oldVal;\n    if(change || flush) {\n      state.bindHandlers[config.handler](config.elem,simpleBind.util.get(obj,config.objKey),config.objName);\n    }\n  }\n};\n\nvar registerBindHandler = function(handlerName,func) {\n  if(typeof func == 'function') {\n    state.bindHandlers[handlerName] = func;\n  }\n};\n\n\nsimpleBind.registerBindType('simplebindhandler', {\n  collection,\n  binding,\n  objNameLocation: COLON_SEPARATED_SECOND_GROUP\n});\nsimpleBind.extendNamespace('registerBindHandler', registerBindHandler);","import state from '../state';\nimport simpleBind from '../simpleBind';\nimport { FIRST_IN_STRING } from './const/objNameLocation';\n\n// define two flags that are used to help us determine flow/bubbling and prevent indefinite recursion: \n//  1. eventDispatchMarker: this is applied when we programatically trigger a change event on an input\n//  2. changeInitiatorMarker: this is applied to bindvalue input when it invokes a change \nvar eventDispatchMarker = 'data-simpleeventdispatch'\n  , changeInitiatorMarker = 'data-simplebindvaluechanger';\n\n/**\n * handleInput() is an event callback to handle changes to simplebindvalue-bound inputs\n */\nvar handleInput = function() {\n  // check if we are simply dispatching an event from the bindingRoutine callback\n  if(this.getAttribute(eventDispatchMarker)) return this.removeAttribute(eventDispatchMarker);\n  // we are not, we need to update other items that are bound to same object.property: \n  var binding = this.getAttribute('data-simplebindvalue').split('.')\n    , objName = binding.shift();\n  // in case this object hasn't been set yet, for whatever reason, set it to a blank object:\n  if(typeof state.boundObjects[objName] == 'undefined') state.boundObjects[objName] = {};\n  this.setAttribute(changeInitiatorMarker,'true');\n  simpleBind.util.set(state.boundObjects[objName],binding.join('.'),getInputValue(this));\n  simpleBind.bind(objName,state.boundObjects[objName]);\n  if(objName.indexOf('__repeat') > -1) {\n    var originalObjName = state.repeatDictionary[objName.split('-').shift()];\n    simpleBind.bind(originalObjName,state.boundObjects[originalObjName]);\n  }\n};\n\nvar rateLimitInput = function() {\n  var elem = this;\n  simpleBind.util.delay(function(){\n    handleInput.call(elem);\n  },50)\n};\n\nvar getInputType = function(elem) {\n  var type, tagName = elem.tagName.toLowerCase();\n  switch(tagName) {\n    case 'input':\n      type = elem.getAttribute('type');\n      return type;\n    default:\n      return tagName;\n  }\n};\n\nvar checkIfInputValueChanged = function(input,currVal) {\n  var type = getInputType(input);\n  // for checkboxes and radio inputs, it is necessary to account for \n  // string vs boolean comparisons since the value attribute on an \n  // input is always a string: \n  switch(type) {\n    case 'checkbox':\n      return String(input.checked) != String(currVal);\n      return false;\n    case 'radio':\n      var radioVal = getInputValue(input);\n      return (input.checked && radioVal != String(currVal)) || (!input.checked && radioVal == String(currVal));\n    default:\n      return currVal != getInputValue(input);\n  }\n};\n\nvar getInputValue = function(elem) {\n  var type = getInputType(elem);\n  switch(type) {\n    case 'checkbox':\n      return elem.checked;\n    default:\n      return elem.value;\n  }\n};\n\nvar attachAppropriateEventHandlers = function(elem,inputType) {\n  switch(inputType) {\n    case 'text':\n    case 'tel':\n    case 'password':\n    case 'textarea':\n    case 'number': \n    case 'email': \n    case 'zip':\n    case 'time':\n      elem.addEventListener('keyup',rateLimitInput);\n    default:\n      elem.addEventListener('change',handleInput);\n      break;\n  }\n};\n\nvar setValue = function(config,val) {\n  switch(config.inputType) {\n    case 'select':\n      var opts = config.elem.getElementsByTagName('option');\n      var selIndex = 0;\n      for(var i=0; i < opts.length; ++i) {\n        if(opts[i].value == val) {\n          selIndex = i;\n          break;\n        }\n      }\n      config.elem.selectedIndex = selIndex;\n      break;\n    case 'radio':\n      config.elem.checked = String(val) == config.elem.value;\n      break;\n    case 'checkbox':\n      config.elem.checked = (val === true || val == 'true');\n      break;\n    case 'textarea':\n      if(config.elem.innerHTML != val) {\n        config.elem.innerHTML = val;\n      }\n      break;\n    case 'text':\n    default:\n      if(val != config.elem.value || flush) {\n        config.elem.value = val;\n      }\n      break;\n  }\n};\n\nvar collection = function(elem,opts){\n  // collection routine, the function that defines the object stored in boundElems\n  opts.simplebindvalue = opts.simplebindvalue.split('.');\n  var configObj = {\n    elem: elem,\n    objName: opts.simplebindvalue.shift(),\n    objKey: opts.simplebindvalue.join('.'),\n    inputType: getInputType(elem),\n    initiatedChange: false\n  };\n  attachAppropriateEventHandlers(elem,configObj.inputType);\n  simpleBind.addToBoundElems('simplebindvalue',configObj.objName,configObj);\n};\n\nvar binding = function(config,obj,flush){\n  // binding routine, the function that determines how binding is done for this bind type\n  var val = simpleBind.util.get(obj,config.objKey);\n  if(checkIfInputValueChanged(config.elem,val)) {\n    // check if this is the element that invoked the change: \n    if(config.elem.getAttribute(changeInitiatorMarker)) {\n      config.elem.removeAttribute(changeInitiatorMarker);\n    } else {\n      // it wasn't, so we need to trigger a change event:\n      setValue(config,val);\n      config.elem.setAttribute(eventDispatchMarker,'true');\n      simpleBind.util.triggerEvent(config.elem,'change');\n    }\n  } else {\n    if(config.elem.getAttribute(changeInitiatorMarker)) {\n      config.elem.removeAttribute(changeInitiatorMarker);\n    }\n  }\n};\n\n// uses default objNameRegex\n\nsimpleBind.registerBindType('simplebindvalue',{\n  collection,\n  binding,\n  objNameLocation: FIRST_IN_STRING\n});","import state from '../state';\nimport simpleBind from '../simpleBind';\nimport { COLON_SEPARATED_SECOND_GROUP } from './const/objNameLocation';\n\nstate.repeatCount = 0;\nstate.repeatDictionary = { };\n\nvar getNewBindingName = function(config,count) {\n  return '__repeat' + config.repeatIndex + '-' + config.innerObjName + count;\n};\n\n/**\n * rewriteBindings() takes a list of elements and rewrites any simplebind binding\n * properties from a specified original object name to a specified new object name\n *\n * @param    {Array}     elems              Nodelist of elements to be processed\n * @param    {String}    originalObjName    Original objName to replace\n * @param    {String}    newObjName         New objName to replace original\n */\nvar rewriteBindings = function(elems,originalObjName,newObjName) {\n  for(var i=0; i < elems.length; ++i) {\n    for(var j=0; j < state.bindTypes.length; ++j) {\n      var attr = 'data-' + state.bindTypes[j]\n        , binding = elems[i].getAttribute(attr);\n      if(binding) {\n        var newBindingVal = simpleBind.util.replaceObjNameInBindingStr(binding,state.bindTypeOpts[state.bindTypes[j]],originalObjName,newObjName);\n        if(newBindingVal != binding) {\n          elems[i].setAttribute(attr,newBindingVal);\n          elems[i].removeAttribute('data-simplebindcollected');\n        } else {\n          // If we have made it this far then the element had a binding string on it but it was\n          // not a member of the array that was bound.  nonetheless, it needs to be recollected\n          // and rebound\n          elems[i].removeAttribute('data-simplebindcollected');\n        }\n      }\n    }\n  }\n};\n\n/**\n * scaleRepeat takes a repeat block and scales the # of repeated elements up or down:\n *\n * @param    {Object}    config    simpleRepeat config object (stored in state.boundElems)\n * @param    {Number}    num       # of desired repeat elements\n */\nvar scaleRepeat = function(config,num) {\n  if(config.repeatedElems.length == num) return;\n  var delta;\n  if(config.repeatedElems.length < num) {\n    // need to add elems\n    delta = num - config.repeatedElems.length;\n    var frag = document.createDocumentFragment();\n    for(var i=0; i < delta; ++i) {\n      var newNode = config.repeatTemplate.cloneNode(true)\n        , innards = newNode.getElementsByTagName('*')\n        , origBind = getNewBindingName(config,0)\n        , newBind = getNewBindingName(config,config.repeatedElems.length);\n      // rebind the base-level node: \n      rewriteBindings([newNode],origBind,newBind);\n      // & then the children: \n      rewriteBindings(innards,origBind,newBind);\n      config.repeatedElems.push(newNode);\n      frag.appendChild(newNode);\n    }\n    config.elem.appendChild(frag);\n    simpleBind.recollectDOM(config.elem,true);\n  } else {\n    // need to remove elems\n    delta = config.repeatedElems.length - num;\n    for(var i=0; i < delta; ++i) {\n      var removed = config.repeatedElems.pop();\n      var objName  = getNewBindingName(config,config.repeatedElems.length);\n      removed.parentNode.removeChild(removed);\n      if(typeof state.boundElems[objName] != 'undefined') delete state.boundElems[objName];\n      if(typeof state.boundObjects[objName] != 'undefined') delete state.boundObjects[objName];\n      if(typeof state.boundObjectsLast[objName] != 'undefined') delete state.boundObjectsLast[objName];\n    }\n  }\n};\n\nvar collection = function(elem,opts){\n  // collection routine, the function that defines the object stored in boundElems\n  opts.simplerepeat = opts.simplerepeat.split(':');\n  var objNameAndKey = opts.simplerepeat.pop().split('.');\n  var configObj = {\n    elem: elem,\n    objName: objNameAndKey.shift(),\n    objKey: objNameAndKey.join('.'),\n    innerObjName: opts.simplerepeat.shift(),\n    repeatedElems: [ ],\n    repeatIndex: state.repeatCount\n  };\n  var innerNodes = elem.getElementsByTagName('*');\n  rewriteBindings(innerNodes,configObj.innerObjName,getNewBindingName(configObj,0));\n  configObj.repeatTemplate = innerNodes[0].parentNode.removeChild(innerNodes[0]);\n  state.repeatDictionary['__repeat' + configObj.repeatIndex] = configObj.objName;\n  ++state.repeatCount;\n  simpleBind.addToBoundElems('simplerepeat',configObj.objName,configObj);\n};\n\nvar binding = function(config,obj,flush){\n  // binding routine, the function that determines how binding is done for this bind type\n  var arrToBind = simpleBind.util.get(obj,config.objKey) || [];\n  if(typeof arrToBind['length'] != 'undefined') {\n    scaleRepeat(config,arrToBind.length);\n    for(var i=0; i < arrToBind.length; ++i) {\n      simpleBind.bind(getNewBindingName(config,i),arrToBind[i]);\n    }\n  }\n};\n\nsimpleBind.registerBindType('simplerepeat', {\n  collection,\n  binding,\n  objNameLocation: COLON_SEPARATED_SECOND_GROUP\n});\nsimpleBind.extendNamespace('rewriteBindings',rewriteBindings);","import state from '../state';\nimport simpleBind from '../simpleBind';\nimport { COLON_SEPARATED_THIRD_GROUP } from './const/objNameLocation';\n\n/*\n\n  Events take the form: 'eventName:eventHandlerName:optionalObjName.key.key'\n    ex: 'click:myClickHandler:someObj.key.key2'\n    or\n    ex: 'click:myClickHandler'     // omitting the object &\n                                      key specifier if not needed\n\n  In above examples, 'myClickHandler' must be registered by calling:\n    ex: simpleBind.registerEvent('myClickHandler',function(event,value){});\n    or\n    ex: simpleBind.registerEvent('myClickHandler',function(event){});\n  respectively.\n\n  Multiple events can be specified as comma-separated values within\n  the data-simpleevent parameter.\n    ex: data-simpleevent=\"click:someEventHandler,hover:someOtherEventHandler\"\n\n  Whenever an event handler is called it will supply 'this' context to the\n  element which emitted the event. (this == element)\n\n*/\n\nstate.eventHandlers = { };\n\nvar addListener = function(elem,eventName,eventHandler,includeObjNameAndKey,objName,objKey) {\n  elem.addEventListener(eventName,function(evt){\n    if(typeof state.eventHandlers[eventHandler] != 'undefined') {\n      if(includeObjNameAndKey) {\n        if(typeof state.boundObjects[objName] != 'undefined') {\n          state.eventHandlers[eventHandler].call(this,evt, simpleBind.util.get(state.boundObjects[objName],objKey));\n          return;\n        }\n      }\n      // still call the event handler even if it obj is undefined\n      return state.eventHandlers[eventHandler].call(this,evt,undefined);\n    }\n  });\n};\n\nvar collection = function(elem,opts) {\n  var events = opts.simpleevent.split(',');\n  for(var i=0; i < events.length; ++i) {\n    var eventArr = events[i].split(':')\n      , eventName = eventArr.shift()\n      , eventHandler = eventArr.shift();\n    var objNameAndKey = eventArr.length ? eventArr.shift().split('.') : false;\n    if(objNameAndKey) {\n      var objName = objNameAndKey.shift()\n        , objKey = objNameAndKey.join('.');\n        addListener(elem,eventName,eventHandler,objNameAndKey,objName,objKey);\n    } else {\n      addListener(elem,eventName,eventHandler,objNameAndKey);\n    }\n  }\n};\n\nvar binding = null;\n\nvar registerEvent = function(eventName,func) {\n  state.eventHandlers[eventName] = func;\n};\n\nsimpleBind.registerBindType('simpleevent',{\n  collection,\n  binding,\n  objNameLocation: COLON_SEPARATED_THIRD_GROUP\n});\nsimpleBind.extendNamespace('registerEvent', registerEvent);","import state from '../state';\nimport simpleBind from '../simpleBind';\nimport { COLON_SEPARATED_SECOND_GROUP } from './const/objNameLocation';\n\nvar collection = function(elem,opts){\n  // collection routine, the function that defines the object stored in boundElems\n  var boundAttrs = opts.simplebindattrs.split(',');\n  for(var i=0; i < boundAttrs.length; ++i) {\n    boundAttrs[i] =  boundAttrs[i].split(':');\n    var configObj = {\n      elem: elem,\n      attr: boundAttrs[i].shift()\n    };\n    boundAttrs[i] = boundAttrs[i].shift().split('.');\n    configObj.objName = boundAttrs[i].shift();\n    configObj.objKey = boundAttrs[i].join('.');\n    simpleBind.addToBoundElems('simplebindattrs',configObj.objName,configObj);\n  }\n};\n\nvar binding = function(config,obj,flush){\n  // binding routine, the function that determines how binding is done for this bind type\n  var val = simpleBind.util.get(obj,config.objKey)\n    , oldVal = simpleBind.util.get(state.boundObjectsLast[config.objName],config.objKey);\n  if(val != oldVal || flush) {\n    config.elem.setAttribute(config.attr,val);\n  }\n};\n\nsimpleBind.registerBindType('simplebindattrs',{\n  collection,\n  binding,\n  objNameLocation: COLON_SEPARATED_SECOND_GROUP\n});","import state from '../state';\nimport simpleBind from '../simpleBind';\nimport { COLON_SEPARATED_SECOND_GROUP } from './const/objNameLocation';\n\n// takes form: data-simpledata=\"thisProp:objName.objKey,otherProp:objName.objKey\"\nvar collection = function(elem,opts){\n  // collection routine, the function that defines the object stored in boundElems\n  var dataProps = opts.simpledata.split(',');\n  for(var i=0; i < dataProps.length; ++i) {\n    var arr = dataProps[i].split(':')\n      , prop = arr.shift();\n    arr = arr.shift().split('.');\n    var configObj = {\n      elem: elem,\n      objName: arr.shift(),\n      objKey: arr.join('.'),\n      prop: prop\n    }\n    simpleBind.addToBoundElems('simpledata',configObj.objName,configObj);\n  }\n};\n\nvar binding = function(config,obj){\n  // binding routine, the function that determines how binding is done for this bind type\n  var prop = 'data-' + config.prop.replace(/\\W+/g, '-').replace(/([a-z\\d])([A-Z])/g, '$1-$2');\n  config.elem.setAttribute(prop, simpleBind.util.get(obj,config.objKey));\n};\n\nsimpleBind.registerBindType('simpledata',{\n  collection,\n  binding,\n  objNameLocation: COLON_SEPARATED_SECOND_GROUP\n});","import state from '../state';\nimport simpleBind from '../simpleBind';\n\nstate.filters = { };\n\nvar getFilteredValue = function(val,filterStr) {\n  filterStr = filterStr.split(',');\n  for(var i=0; i < filterStr.length; ++i) {\n    if(typeof state.filters[filterStr[i]] != 'undefined') {\n      val = state.filters[filterStr[i]](val)\n    }\n  }\n  return val;\n};\n\nvar registerFilter = function(filterName,fn) {\n  if(typeof fn == 'function') {\n    state.filters[filterName] = fn;\n  }\n};\n\nsimpleBind.extendNamespace('getFilteredValue',getFilteredValue);\nsimpleBind.extendNamespace('registerFilter',registerFilter);"],"names":["const","timer","FIRST_IN_STRING","COLON_SEPARATED_SECOND_GROUP","COLON_SEPARATED_THIRD_GROUP","getType","variable","type","Array","delay","callback","ms","clearTimeout","setTimeout","copyArrayWithoutReferences","arr","toReturn","i","length","push","extend","len","arguments","src","target","key","isArrayPresent","simpleExtend","getKeys","obj","Object","keys","getData","elem","attrs","data","getAttrs","indexOf","substring","attributes","attr","item","nodeName","hasOwnProperty","value","nodeValue","escapeRegExp","string","replace","str","val","finalProp","split","pop","shift","bindTypeOpts","oldName","newName","map","location","objNameLocation","objNameLocations.FIRST_IN_STRING","RegExp","objNameLocations.COLON_SEPARATED_SECOND_GROUP","objNameLocations.COLON_SEPARATED_THIRD_GROUP","join","document","evt","createEvent","initEvent","dispatchEvent","fireEvent","bindTypes","boundElems","boundObjects","boundObjectsLast","ready","beforeReadyBindQueue","autoReBinding","autoReBindingQueue","plugins","d","domCollection","base","autoReBind","state","all","getElementsByTagName","opts","util.getData","foundBinding","j","setAttribute","bindType","collection","processAutoRebindingQueue","processBoundElems","elems","flush","binding","processPlugins","lifecycleHook","forEach","plugin","apply","args","addEventListener","lib","bind","name","init","window","simpleBind","util","getState","let","defaultBindTypeOpts","registerBindType","selector","util.extend","addToBoundElems","objName","configObj","recollectDOM","context","pluginDefaults","preBind","postBind","registerPlugin","extendNamespace","method","simplebind","objKey","config","get","getFilteredValue","simplefilter","JSON","stringify","simplebindhtml","innerHTML","childNodes","appendChild","createTextNode","simplebindclass","classNames","match","classList","ref","bindHandlers","simplebindhandler","handler","oldVal","handlerName","func","eventDispatchMarker","changeInitiatorMarker","handleInput","this","getAttribute","removeAttribute","set","getInputValue","originalObjName","repeatDictionary","rateLimitInput","call","getInputType","tagName","toLowerCase","checked","simplebindvalue","inputType","initiatedChange","attachAppropriateEventHandlers","input","currVal","String","radioVal","checkIfInputValueChanged","selIndex","selectedIndex","setValue","triggerEvent","repeatCount","getNewBindingName","count","repeatIndex","innerObjName","rewriteBindings","newObjName","newBindingVal","replaceObjNameInBindingStr","simplerepeat","objNameAndKey","repeatedElems","innerNodes","repeatTemplate","parentNode","removeChild","arrToBind","num","delta","frag","createDocumentFragment","newNode","cloneNode","innards","origBind","newBind","removed","scaleRepeat","eventHandlers","addListener","eventName","eventHandler","includeObjNameAndKey","undefined","events","simpleevent","eventArr","boundAttrs","simplebindattrs","dataProps","simpledata","prop","filters","filterStr","filterName","fn"],"mappings":"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"}