{"version":3,"file":"simpleBind.umd.js","sources":["../src/simpleBindUtil.js","../src/state.js","../src/simpleBind.js","../src/bindTypes/simplebind.js","../src/bindTypes/simplebindhandler.js","../src/bindTypes/simplebindvalue.js","../src/bindTypes/simplerepeat.js","../src/bindTypes/simpleevent.js","../src/bindTypes/simplebindattrs.js","../src/bindTypes/simpledata.js","../src/bindAugmenters/filters.js"],"sourcesContent":["var d = document;\r\n\r\nvar getType = function(variable) {\r\n  var type = typeof variable;\r\n  switch(type) {\r\n    case 'object':\r\n      if(variable == null) return 'null';\r\n      return variable instanceof Array ? 'array' : type;\r\n    default:\r\n      return type;\r\n  }\r\n};\r\n\r\nvar copyArrayWithoutReferences = function (arr) {\r\n  var toReturn = [];\r\n  for (var i = 0; i < arr.length; ++i) {\r\n    var type = getType(arr[i]);\r\n    switch (type) {\r\n      case 'object':\r\n        toReturn.push(extend({}, arr[i]));\r\n        break;\r\n      case 'array':\r\n        toReturn.push(copyArrayWithoutReferences(arr[i]));\r\n        break;\r\n      default:\r\n        toReturn.push(arr[i]);\r\n        break;\r\n    }\r\n  }\r\n  return toReturn;\r\n};\r\n\r\nvar extendWithArrayOfObjects = function(args) {\r\n  for (var i = 1, len = args.length; i < len; ++i) {\r\n    var src = args[i]\r\n      , target = args[0];\r\n    for (var key in src) {\r\n      var isArrayPresent = getType(src[key]) === 'array';\r\n      var simpleExtend = getType(target[key]) != 'object' && getType(src[key]) != 'object' && !isArrayPresent;\r\n      if (simpleExtend) {\r\n        target[key] = src[key];\r\n      } else {\r\n        target[key] = extend(typeof target[key] == 'undefined' ? { } : target[key],src[key]);\r\n        if (isArrayPresent) {\r\n          target[key] = copyArrayWithoutReferences(src[key]);\r\n        } else {\r\n          target[key] = extend(typeof target[key] == 'undefined' ? {} : target[key], src[key]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return args.length ? args[0] : { };\r\n};\r\n\r\nexport var delay = (function(){\r\n  var timer = 0;\r\n  return function(callback, ms){\r\n    clearTimeout (timer);\r\n    timer = setTimeout(callback, ms);\r\n  };\r\n})();\r\n\r\nexport var extend = function() {\r\n  return extendWithArrayOfObjects(arguments);\r\n};\r\n\r\nexport var getKeys = function(obj) {\r\n  if(Object.keys) {\r\n    return Object.keys(obj);\r\n  } else {\r\n    arr = [];\r\n    for(var key in obj) {\r\n      arr.push(key);\r\n    }\r\n    return arr;\r\n  }\r\n};\r\n\r\nexport var getData = function(elem) {\r\n  var attrs, keys, data = { };\r\n  attrs = getAttrs(elem);\r\n  keys = getKeys(attrs);\r\n  for(var i=0; i < keys.length; ++i) {\r\n    if(keys[i].indexOf('data-') === 0) {\r\n      data[keys[i].substring(5,keys[i].length)] = attrs[keys[i]];\r\n    }\r\n  }\r\n  return data;\r\n};\r\n\r\nexport var getAttrs = function(elem) {\r\n  var attrs, obj = {};\r\n  attrs = elem.attributes;\r\n  for(var i=0; i < attrs.length; ++i) {\r\n    var attr = attrs.item(i);\r\n    obj[attr.nodeName] = (attr.hasOwnProperty('value')) ? attr.value : attr.nodeValue;\r\n  }\r\n  return obj;\r\n};\r\n\r\n// A great function for setting object values\r\n// via a string with dot notation:\r\n// ex) set({x:{y:{z:2}}},'y.z',3)\r\n\r\n// set = function(obj,str,val) {\r\n//   str = str.split('.');\r\n//   while(str.length > 1) {\r\n//     obj = obj[str.shift()];\r\n//   }\r\n//   obj[str.shift()] = val;\r\n// };\r\n\r\n// let's modify this function to be able to\r\n// build an object so we could have SEO friendly\r\n// binds and so that people don't have to rush\r\n// to bind their objects immediately\r\nexport var set = function(obj,str,val) {\r\n  str = str.split('.');\r\n  var finalProp = str.pop();\r\n  while(str.length) {\r\n    var key = str.shift();\r\n    obj[key] = typeof obj[key] == 'undefined' ? { } : obj[key];\r\n    obj = obj[key];\r\n  }\r\n  obj[finalProp] = val;\r\n};\r\n\r\n// Same as above but retrieves the value as a string or as an empty string\r\n// if not set:\r\nexport var get = function(obj,str) {\r\n  if(str == '$base' || str === '') return obj;\r\n  str = str.split('.');\r\n  for(var i=0; i < str.length; ++i) {\r\n    if(str[i] == '$base') {\r\n      return obj;\r\n    } else if(obj == null) {\r\n      return '';\r\n    } else if(typeof obj[str[i]] == 'undefined') {\r\n      return '';\r\n    } else {\r\n      if(obj === null) {\r\n        return '';\r\n      } else {\r\n        obj = obj[str[i]];\r\n      }\r\n    }\r\n  }\r\n  return obj;\r\n};\r\n\r\nvar standardObjNameRegex = new RegExp(/^[^\\.]*/);\r\nvar replaceObjNameInStandardFormat = function(str,oldObj,newObj) {\r\n  if(str == oldObj) {\r\n    str = newObj;\r\n  } else if(str.indexOf(oldObj + '.') == 0) {\r\n    str = str.replace(standardObjNameRegex,newObj)\r\n  };\r\n  return str;\r\n};\r\n\r\nexport var replaceObjNameInBindingStr = function(str,bindType,oldObj,newObj) {\r\n  var origStr = str + '';\r\n  if(str.indexOf(':') > -1) {\r\n    // we have either a bindhandler, simpledata, simpleevent, simplebindattrs, or simplerepeat\r\n    switch(bindType) {\r\n      case 'simplerepeat':\r\n        str = str.split(':');\r\n        str[1] = replaceObjNameInStandardFormat(str[1],oldObj,newObj);\r\n        str = str.join(':');\r\n        break;\r\n      case 'simpleevent':\r\n        str = str.split(':');\r\n        if(str.length >= 3) {\r\n          str[2] = replaceObjNameInStandardFormat(str[2],oldObj,newObj);\r\n        }\r\n        str = str.join(':');\r\n        break;\r\n      case 'simplebindhandler':\r\n      case 'simpledata':\r\n      case 'simplebindattrs':\r\n      default:\r\n        str = str.split(',');\r\n        for(var i=0; i < str.length; ++i) {\r\n          str[i] = str[i].split(':');\r\n          if(str[i].length > 1) {\r\n            str[i][1] = replaceObjNameInStandardFormat(str[i][1],oldObj,newObj)\r\n          };\r\n          str[i] = str[i].join(':');\r\n        }\r\n        str = str.join(',');\r\n        break;\r\n    }\r\n  } else {\r\n    // we have a simplebind or simplebindvalue\r\n    str = replaceObjNameInStandardFormat(str,oldObj,newObj);\r\n  }\r\n  return str;\r\n};\r\n\r\nexport var triggerEvent = function(elem,type){\r\n  if('createEvent' in d) {\r\n    var evt = d.createEvent('HTMLEvents');\r\n    evt.initEvent(type,false,true);\r\n    elem.dispatchEvent(evt);\r\n  } else {\r\n    elem.fireEvent('on' + type);\r\n  }\r\n};","export default { \r\n  bindTypes: [ ], \r\n  bindTypeOpts: { }, \r\n  boundElems: { }, \r\n  boundObjects: { }, \r\n  boundObjectsLast: { }, \r\n  ready: false,\r\n  beforeReadyBindQueue: [ ], \r\n  autoReBinding: false, \r\n  autoReBindingQueue: { }\r\n};","import * as util from './simpleBindUtil';\r\nimport state from './state';\r\n\r\nvar d = document;\r\n\r\nvar init = function() { \r\n  domCollection();\r\n  state.ready = true; \r\n  if(state.beforeReadyBindQueue.length) { \r\n    for(var i=0; i < state.beforeReadyBindQueue.length; ++i) { \r\n      lib.bind(state.beforeReadyBindQueue[i].name,state.beforeReadyBindQueue[i].obj);\r\n    }\r\n  }\r\n}; \r\n\r\nvar domCollection = function(base,autoReBind) { \r\n  autoReBind = (typeof autoReBind == 'undefined') ? false : autoReBind; \r\n  if(autoReBind) { \r\n    state.autoReBinding = true; \r\n    state.autoReBindingQueue = { }; \r\n  } \r\n  base = (typeof base == 'undefined') ? d : base;\r\n  var all = base.getElementsByTagName('*');\r\n  for(var i=0; i < all.length; ++i) {\r\n    var opts = util.getData(all[i]);\r\n    if(typeof opts['simplebindcollected'] == 'undefined') { \r\n      var foundBinding = false; \r\n      for(var j=0; j < state.bindTypes.length; ++j) { \r\n        if(typeof opts[state.bindTypes[j]] != 'undefined') { \r\n          if(!foundBinding) { \r\n            foundBinding = true;  \r\n            all[i].setAttribute('data-simplebindcollected','true'); \r\n          }\r\n          opts.bindType = state.bindTypes[j]; \r\n          state.bindTypeOpts[state.bindTypes[j]].collection(all[i],opts); \r\n        }\r\n      }\r\n    }\r\n  }\r\n  if(autoReBind) { \r\n    state.autoReBinding = false; \r\n    processAutoRebindingQueue(); \r\n  } \r\n}; \r\n\r\nvar processBoundElems = function(elems,obj,flush) { \r\n  flush = typeof flush == 'undefined' ? false : flush;\r\n  for(var i=0; i < elems.length; ++i) { \r\n    if(state.bindTypeOpts[elems[i].bindType].binding) { \r\n      state.bindTypeOpts[elems[i].bindType].binding(elems[i],obj,flush); \r\n    }\r\n  }\r\n}; \r\n\r\nvar processAutoRebindingQueue = function() { \r\n  for(var key in state.autoReBindingQueue) { \r\n    if(typeof state.boundObjects[key] != 'undefined') { \r\n      processBoundElems(state.autoReBindingQueue[key],state.boundObjects[key],true);\r\n    }\r\n  }\r\n}; \r\n\r\nvar processBindings = function(objName,obj) { \r\n  if(typeof state.boundObjectsLast[objName] == 'undefined') state.boundObjectsLast[objName] = { }; \r\n  state.boundObjects[objName] = obj; \r\n  if(typeof state.boundElems[objName] != 'undefined') { \r\n    processBoundElems(state.boundElems[objName],obj); \r\n    state.boundObjectsLast[objName] = util.extend({},obj);\r\n  }\r\n}; \r\n\r\nd.addEventListener('DOMContentLoaded',function(){\r\n  init();\r\n}); \r\n\r\nvar lib = window.simpleBind || {}; \r\n\r\nlib.util = util;\r\n\r\nlib.getState = function() { \r\n  return state;\r\n}; \r\n\r\nlib.registerBindType = function(selector,collectionRoutine,bindingRoutine) { \r\n  if(typeof state.bindTypeOpts[selector] == 'undefined') { \r\n    state.bindTypeOpts[selector] = { }; \r\n    state.bindTypes.push(selector); \r\n  }\r\n  state.bindTypeOpts[selector].collection = collectionRoutine; \r\n  state.bindTypeOpts[selector].binding = bindingRoutine; \r\n}; \r\n\r\nlib.addToBoundElems = function(bindType,objName,configObj) { \r\n  configObj.bindType = bindType; \r\n  if(typeof state.boundElems[objName] == 'undefined') state.boundElems[objName] = []; \r\n  if(state.autoReBinding) { \r\n    if(typeof state.autoReBindingQueue[objName] == 'undefined') state.autoReBindingQueue[objName] = []; \r\n    state.autoReBindingQueue[objName].push(configObj);      \r\n  }\r\n  state.boundElems[objName].push(configObj); \r\n}; \r\n\r\nlib.recollectDOM = function(context,autoReBind) { \r\n  domCollection(context,autoReBind);\r\n}; \r\n\r\nlib.bind = function(objName,obj) {\r\n  if(typeof objName == 'string' && typeof obj == 'object') {\r\n    if(typeof state.boundElems[objName] == 'undefined') state.boundElems[objName] = [];\r\n    if(state.ready) { \r\n      processBindings(objName,obj);\r\n    } else { \r\n      state.beforeReadyBindQueue.push({name: objName, obj: obj});\r\n    }\r\n  }\r\n}; \r\n\r\nlib.extendNamespace = function(name,method) { \r\n  lib[name] = method;\r\n}; \r\n\r\nexport default lib; ","import state from '../state';\r\nimport simpleBind from '../simpleBind';\r\n\r\nvar collectionRoutine = function(elem,opts){\r\n  // collection routine, the function that defines the object stored in boundElems\r\n  opts.simplebind = opts.simplebind.split('.');\r\n  var configObj = {\r\n    elem: elem,\r\n    objName: opts.simplebind.shift(),\r\n    objKey: opts.simplebind.join('.'),\r\n    opts: opts\r\n  };\r\n  simpleBind.addToBoundElems('simplebind',configObj.objName,configObj);\r\n};\r\n\r\nvar bindingRoutine = function(config,obj,flush){\r\n  // binding routine, the function that determines how binding is done for this bind type\r\n  var val = simpleBind.util.get(obj,config.objKey);\r\n  var oldVal = simpleBind.util.get(state.boundObjectsLast[config.objName],config.objKey);\r\n  if(val !== oldVal || flush) {\r\n    if(typeof config.opts['simplefilter'] != 'undefined') {\r\n      val = simpleBind.getFilteredValue(val,config.opts.simplefilter);\r\n    }\r\n    val = typeof val == 'string' ? val : JSON.stringify(val,null,2);\r\n    if(typeof config.opts['simplebindhtml'] != 'undefined' && config.opts.simplebindhtml==\"true\") {\r\n      config.elem.innerHTML = val;\r\n    } else {\r\n      if(config.elem.childNodes.length) {\r\n        config.elem.childNodes[0].nodeValue = val;\r\n      } else {\r\n        config.elem.appendChild(document.createTextNode(val));\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nsimpleBind.registerBindType('simplebind',collectionRoutine,bindingRoutine);","import state from '../state';\r\nimport simpleBind from '../simpleBind';\r\n\r\nstate.bindHandlers = { };\r\n\r\nvar collectionRoutine = function(elem,opts){\r\n  // collection routine, the function that defines the object stored in boundElems\r\n  var bindHandlers = opts.simplebindhandler.split(',');\r\n  for(var i=0; i < bindHandlers.length; ++i) {\r\n    bindHandlers[i] =  bindHandlers[i].split(':');\r\n    var configObj = {\r\n      elem: elem,\r\n      handler: bindHandlers[i].shift()\r\n    };\r\n    bindHandlers[i] = bindHandlers[i].shift().split('.');\r\n    configObj.objName = bindHandlers[i].shift();\r\n    configObj.objKey = bindHandlers[i].join('.');\r\n    simpleBind.addToBoundElems('simplebindhandler',configObj.objName,configObj);\r\n  }\r\n};\r\n\r\nvar bindingRoutine = function(config,obj,flush){\r\n  // binding routine, the function that determines how binding is done for this bind type\r\n  if(typeof state.bindHandlers[config.handler] != 'undefined') {\r\n    var val = simpleBind.util.get(obj,config.objKey)\r\n      , oldVal = simpleBind.util.get(state.boundObjectsLast[config.objName],config.objKey);\r\n    var change = typeof val == 'object' ? JSON.stringify(val) != JSON.stringify(oldVal) : val != oldVal;\r\n    if(change || flush) {\r\n      state.bindHandlers[config.handler](config.elem,simpleBind.util.get(obj,config.objKey),config.objName);\r\n    }\r\n  }\r\n};\r\n\r\nvar registerBindHandler = function(handlerName,func) {\r\n  if(typeof func == 'function') {\r\n    state.bindHandlers[handlerName] = func;\r\n  }\r\n};\r\n\r\nsimpleBind.registerBindType('simplebindhandler', collectionRoutine,bindingRoutine);\r\nsimpleBind.extendNamespace('registerBindHandler', registerBindHandler);","import state from '../state';\r\nimport simpleBind from '../simpleBind';\r\n\r\n// define two flags that are used to help us determine flow/bubbling and prevent indefinite recursion: \r\n//  1. eventDispatchMarker: this is applied when we programatically trigger a change event on an input\r\n//  2. changeInitiatorMarker: this is applied to bindvalue input when it invokes a change \r\nvar eventDispatchMarker = 'data-simpleeventdispatch'\r\n  , changeInitiatorMarker = 'data-simplebindvaluechanger';\r\n\r\n/**\r\n * handleInput() is an event callback to handle changes to simplebindvalue-bound inputs\r\n */\r\nvar handleInput = function() {\r\n  // check if we are simply dispatching an event from the bindingRoutine callback\r\n  if(this.getAttribute(eventDispatchMarker)) {\r\n    // we are\r\n    this.removeAttribute(eventDispatchMarker);\r\n  } else {\r\n    // we are not, we need to update other items that are bound to same object.property: \r\n    var binding = this.getAttribute('data-simplebindvalue').split('.')\r\n      , objName = binding.shift();\r\n    // in case this object hasn't been set yet, for whatever reason, set it to a blank object:\r\n    if(typeof state.boundObjects[objName] == 'undefined') state.boundObjects[objName] = {};\r\n    simpleBind.util.set(state.boundObjects[objName],binding.join('.'),getInputValue(this));\r\n    simpleBind.bind(objName,state.boundObjects[objName]);\r\n    this.setAttribute(changeInitiatorMarker,'true');\r\n    if(objName.indexOf('__repeat') > -1) {\r\n      var originalObjName = state.repeatDictionary[objName.split('-').shift()];\r\n      simpleBind.bind(originalObjName,state.boundObjects[originalObjName]);\r\n    }\r\n  }\r\n\r\n};\r\n\r\nvar rateLimitInput = function() {\r\n  var elem = this;\r\n  simpleBind.util.delay(function(){\r\n    handleInput.call(elem);\r\n  },50)\r\n};\r\n\r\nvar getInputType = function(elem) {\r\n  var type, tagName = elem.tagName.toLowerCase();\r\n  switch(tagName) {\r\n    case 'input':\r\n      type = elem.getAttribute('type');\r\n      return type;\r\n    default:\r\n      return tagName;\r\n  }\r\n};\r\n\r\nvar checkIfInputValueChanged = function(input,currVal) {\r\n  var type = getInputType(input);\r\n  // for checkboxes and radio inputs, it is necessary to account for \r\n  // string vs boolean comparisons since the value attribute on an \r\n  // input is always a string: \r\n  switch(type) {\r\n    case 'checkbox':\r\n      return String(input.checked) != String(currVal);\r\n      return false;\r\n    case 'radio':\r\n      var radioVal = getInputValue(input);\r\n      return (input.checked && radioVal != String(currVal)) || (!input.checked && radioVal == String(currVal));\r\n    default:\r\n      return currVal != getInputValue(input);\r\n  }\r\n};\r\n\r\nvar getInputValue = function(elem) {\r\n  var type = getInputType(elem);\r\n  switch(type) {\r\n    case 'checkbox':\r\n      return elem.checked;\r\n    default:\r\n      return elem.value;\r\n  }\r\n};\r\n\r\nvar attachAppropriateEventHandlers = function(elem,inputType) {\r\n  switch(inputType) {\r\n    case 'text':\r\n    case 'tel':\r\n    case 'password':\r\n    case 'textarea':\r\n    case 'zip':\r\n      elem.addEventListener('keyup',rateLimitInput);\r\n    default:\r\n      elem.addEventListener('change',handleInput);\r\n      break;\r\n  }\r\n};\r\n\r\nvar setValue = function(config,val) {\r\n  switch(config.inputType) {\r\n    case 'select':\r\n      var opts = config.elem.getElementsByTagName('option');\r\n      var selIndex = 0;\r\n      for(var i=0; i < opts.length; ++i) {\r\n        if(opts[i].value == val) {\r\n          selIndex = i;\r\n          break;\r\n        }\r\n      }\r\n      config.elem.selectedIndex = selIndex;\r\n      break;\r\n    case 'radio':\r\n      config.elem.checked = String(val) == config.elem.value;\r\n      break;\r\n    case 'checkbox':\r\n      config.elem.checked = (val === true || val == 'true');\r\n      break;\r\n    case 'textarea':\r\n      if(config.elem.innerHTML != val) {\r\n        config.elem.innerHTML = val;\r\n      }\r\n      break;\r\n    case 'text':\r\n    default:\r\n      if(val != config.elem.value || flush) {\r\n        config.elem.value = val;\r\n      }\r\n      break;\r\n  }\r\n};\r\n\r\nvar collectionRoutine = function(elem,opts){\r\n  // collection routine, the function that defines the object stored in boundElems\r\n  opts.simplebindvalue = opts.simplebindvalue.split('.');\r\n  var configObj = {\r\n    elem: elem,\r\n    objName: opts.simplebindvalue.shift(),\r\n    objKey: opts.simplebindvalue.join('.'),\r\n    inputType: getInputType(elem),\r\n    initiatedChange: false\r\n  };\r\n  attachAppropriateEventHandlers(elem,configObj.inputType);\r\n  simpleBind.addToBoundElems('simplebindvalue',configObj.objName,configObj);\r\n};\r\n\r\nvar bindingRoutine = function(config,obj,flush){\r\n  // binding routine, the function that determines how binding is done for this bind type\r\n  var val = simpleBind.util.get(obj,config.objKey);\r\n  if(checkIfInputValueChanged(config.elem,val)) {\r\n    // check if this is the element that invoked the change: \r\n    if(config.elem.getAttribute(changeInitiatorMarker)) {\r\n      config.elem.removeAttribute(changeInitiatorMarker);\r\n    } else {\r\n      // it wasn't, so we need to trigger a change event:\r\n      setValue(config,val);\r\n      config.elem.setAttribute(eventDispatchMarker,'true');\r\n      simpleBind.util.triggerEvent(config.elem,'change');\r\n    }\r\n  } else {\r\n    if(config.elem.getAttribute(changeInitiatorMarker)) {\r\n      config.elem.removeAttribute(changeInitiatorMarker);\r\n    }\r\n  }\r\n};\r\n\r\nsimpleBind.registerBindType('simplebindvalue',collectionRoutine,bindingRoutine);","import state from '../state';\r\nimport simpleBind from '../simpleBind';\r\n\r\nstate.repeatCount = 0;\r\nstate.repeatDictionary = { };\r\n\r\nvar getNewBindingName = function(config,count) {\r\n  return '__repeat' + config.repeatIndex + '-' + config.innerObjName + count;\r\n};\r\n\r\n/**\r\n * rewriteBindings() takes a list of elements and rewrites any simplebind binding\r\n * properties from a specified original object name to a specified new object name\r\n *\r\n * @param    {Array}     elems              Nodelist of elements to be processed\r\n * @param    {String}    originalObjName    Original objName to replace\r\n * @param    {String}    newObjName         New objName to replace original\r\n */\r\nvar rewriteBindings = function(elems,originalObjName,newObjName) {\r\n  for(var i=0; i < elems.length; ++i) {\r\n    for(var j=0; j < state.bindTypes.length; ++j) {\r\n      var attr = 'data-' + state.bindTypes[j]\r\n        , binding = elems[i].getAttribute(attr);\r\n      if(binding) {\r\n        var newBindingVal = simpleBind.util.replaceObjNameInBindingStr(binding,state.bindTypes[j],originalObjName,newObjName);\r\n        if(newBindingVal != binding) {\r\n          elems[i].setAttribute(attr,newBindingVal);\r\n          elems[i].removeAttribute('data-simplebindcollected');\r\n        } else {\r\n          // If we have made it this far then the element had a binding string on it but it was\r\n          // not a member of the array that was bound.  nonetheless, it needs to be recollected\r\n          // and rebound\r\n          elems[i].removeAttribute('data-simplebindcollected');\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * scaleRepeat takes a repeat block and scales the # of repeated elements up or down:\r\n *\r\n * @param    {Object}    config    simpleRepeat config object (stored in state.boundElems)\r\n * @param    {Number}    num       # of desired repeat elements\r\n */\r\nvar scaleRepeat = function(config,num) {\r\n  if(config.repeatedElems.length == num) return;\r\n  var delta;\r\n  if(config.repeatedElems.length < num) {\r\n    // need to add elems\r\n    delta = num - config.repeatedElems.length;\r\n    var frag = document.createDocumentFragment();\r\n    for(var i=0; i < delta; ++i) {\r\n      var newNode = config.repeatTemplate.cloneNode(true)\r\n        , innards = newNode.getElementsByTagName('*')\r\n        , origBind = getNewBindingName(config,0)\r\n        , newBind = getNewBindingName(config,config.repeatedElems.length);\r\n      // rebind the base-level node: \r\n      rewriteBindings([newNode],origBind,newBind);\r\n      // & then the children: \r\n      rewriteBindings(innards,origBind,newBind);\r\n      config.repeatedElems.push(newNode);\r\n      frag.appendChild(newNode);\r\n    }\r\n    config.elem.appendChild(frag);\r\n    simpleBind.recollectDOM(config.elem,true);\r\n  } else {\r\n    // need to remove elems\r\n    delta = config.repeatedElems.length - num;\r\n    for(var i=0; i < delta; ++i) {\r\n      var removed = config.repeatedElems.pop();\r\n      var objName  = getNewBindingName(config,config.repeatedElems.length);\r\n      removed.parentNode.removeChild(removed);\r\n      if(typeof state.boundElems[objName] != 'undefined') delete state.boundElems[objName];\r\n      if(typeof state.boundObjects[objName] != 'undefined') delete state.boundObjects[objName];\r\n      if(typeof state.boundObjectsLast[objName] != 'undefined') delete state.boundObjectsLast[objName];\r\n    }\r\n  }\r\n};\r\n\r\nvar collectionRoutine = function(elem,opts){\r\n  // collection routine, the function that defines the object stored in boundElems\r\n  opts.simplerepeat = opts.simplerepeat.split(':');\r\n  var objNameAndKey = opts.simplerepeat.pop().split('.');\r\n  var configObj = {\r\n    elem: elem,\r\n    objName: objNameAndKey.shift(),\r\n    objKey: objNameAndKey.join('.'),\r\n    innerObjName: opts.simplerepeat.shift(),\r\n    repeatedElems: [ ],\r\n    repeatIndex: state.repeatCount\r\n  };\r\n  var innerNodes = elem.getElementsByTagName('*');\r\n  rewriteBindings(innerNodes,configObj.innerObjName,getNewBindingName(configObj,0));\r\n  configObj.repeatTemplate = innerNodes[0].parentNode.removeChild(innerNodes[0]);\r\n  state.repeatDictionary['__repeat' + configObj.repeatIndex] = configObj.objName;\r\n  ++state.repeatCount;\r\n  simpleBind.addToBoundElems('simplerepeat',configObj.objName,configObj);\r\n};\r\n\r\nvar bindingRoutine = function(config,obj,flush){\r\n  // binding routine, the function that determines how binding is done for this bind type\r\n  var arrToBind = simpleBind.util.get(obj,config.objKey) || [];\r\n  if(typeof arrToBind['length'] != 'undefined') {\r\n    scaleRepeat(config,arrToBind.length);\r\n    for(var i=0; i < arrToBind.length; ++i) {\r\n      simpleBind.bind(getNewBindingName(config,i),arrToBind[i]);\r\n    }\r\n  }\r\n};\r\n\r\nsimpleBind.registerBindType('simplerepeat',collectionRoutine,bindingRoutine);\r\nsimpleBind.extendNamespace('rewriteBindings',rewriteBindings);","import state from '../state';\r\nimport simpleBind from '../simpleBind';\r\n\r\n/*\r\n\r\n  Events take the form: 'eventName:eventHandlerName:optionalObjName.key.key'\r\n    ex: 'click:myClickHandler:someObj.key.key2'\r\n    or\r\n    ex: 'click:myClickHandler'     // omitting the object &\r\n                                      key specifier if not needed\r\n\r\n  In above examples, 'myClickHandler' must be registered by calling:\r\n    ex: simpleBind.registerEvent('myClickHandler',function(event,value){});\r\n    or\r\n    ex: simpleBind.registerEvent('myClickHandler',function(event){});\r\n  respectively.\r\n\r\n  Multiple events can be specified as comma-separated values within\r\n  the data-simpleevent parameter.\r\n    ex: data-simpleevent=\"click:someEventHandler,hover:someOtherEventHandler\"\r\n\r\n  Whenever an event handler is called it will supply 'this' context to the\r\n  element which emitted the event. (this == element)\r\n\r\n*/\r\n\r\nstate.eventHandlers = { };\r\n\r\nvar addListener = function(elem,eventName,eventHandler,includeObjNameAndKey,objName,objKey) {\r\n  elem.addEventListener(eventName,function(evt){\r\n    if(typeof state.eventHandlers[eventHandler] != 'undefined') {\r\n      if(includeObjNameAndKey) {\r\n        if(typeof state.boundObjects[objName] != 'undefined') {\r\n          state.eventHandlers[eventHandler].call(this,evt, simpleBind.util.get(state.boundObjects[objName],objKey));\r\n          return;\r\n        }\r\n      }\r\n      // still call the event handler even if it obj is undefined\r\n      return state.eventHandlers[eventHandler].call(this,evt,undefined);\r\n    }\r\n  });\r\n};\r\n\r\nvar collectionRoutine = function(elem,opts) {\r\n  var events = opts.simpleevent.split(',');\r\n  for(var i=0; i < events.length; ++i) {\r\n    var eventArr = events[i].split(':')\r\n      , eventName = eventArr.shift()\r\n      , eventHandler = eventArr.shift();\r\n    var objNameAndKey = eventArr.length ? eventArr.shift().split('.') : false;\r\n    if(objNameAndKey) {\r\n      var objName = objNameAndKey.shift()\r\n        , objKey = objNameAndKey.join('.');\r\n        addListener(elem,eventName,eventHandler,objNameAndKey,objName,objKey);\r\n    } else {\r\n      addListener(elem,eventName,eventHandler,objNameAndKey);\r\n    }\r\n  }\r\n};\r\n\r\nvar registerEvent = function(eventName,func) {\r\n  state.eventHandlers[eventName] = func;\r\n};\r\n\r\nsimpleBind.registerBindType('simpleevent',collectionRoutine,null);\r\nsimpleBind.extendNamespace('registerEvent', registerEvent);","import state from '../state';\r\nimport simpleBind from '../simpleBind';\r\n\r\nvar collectionRoutine = function(elem,opts){\r\n  // collection routine, the function that defines the object stored in boundElems\r\n  var boundAttrs = opts.simplebindattrs.split(',');\r\n  for(var i=0; i < boundAttrs.length; ++i) {\r\n    boundAttrs[i] =  boundAttrs[i].split(':');\r\n    var configObj = {\r\n      elem: elem,\r\n      attr: boundAttrs[i].shift()\r\n    };\r\n    boundAttrs[i] = boundAttrs[i].shift().split('.');\r\n    configObj.objName = boundAttrs[i].shift();\r\n    configObj.objKey = boundAttrs[i].join('.');\r\n    simpleBind.addToBoundElems('simplebindattrs',configObj.objName,configObj);\r\n  }\r\n};\r\n\r\nvar bindingRoutine = function(config,obj,flush){\r\n  // binding routine, the function that determines how binding is done for this bind type\r\n  var val = simpleBind.util.get(obj,config.objKey)\r\n    , oldVal = simpleBind.util.get(state.boundObjectsLast[config.objName],config.objKey);\r\n  if(val != oldVal || flush) {\r\n    config.elem.setAttribute(config.attr,val);\r\n  }\r\n};\r\n\r\nsimpleBind.registerBindType('simplebindattrs',collectionRoutine,bindingRoutine);","import state from '../state';\r\nimport simpleBind from '../simpleBind';\r\n\r\n// takes form: data-simpledata=\"thisProp:objName.objKey,otherProp:objName.objKey\"\r\nvar collectionRoutine = function(elem,opts){\r\n  // collection routine, the function that defines the object stored in boundElems\r\n  var dataProps = opts.simpledata.split(',');\r\n  for(var i=0; i < dataProps.length; ++i) {\r\n    var arr = dataProps[i].split(':')\r\n      , prop = arr.shift();\r\n    arr = arr.shift().split('.');\r\n    var configObj = {\r\n      elem: elem,\r\n      objName: arr.shift(),\r\n      objKey: arr.join('.'),\r\n      prop: prop\r\n    }\r\n    simpleBind.addToBoundElems('simpledata',configObj.objName,configObj);\r\n  }\r\n};\r\n\r\nvar bindingRoutine = function(config,obj){\r\n  // binding routine, the function that determines how binding is done for this bind type\r\n  var prop = 'data-' + config.prop.replace(/\\W+/g, '-').replace(/([a-z\\d])([A-Z])/g, '$1-$2');\r\n  config.elem.setAttribute(prop, simpleBind.util.get(obj,config.objKey));\r\n};\r\n\r\nsimpleBind.registerBindType('simpledata',collectionRoutine,bindingRoutine);","import state from '../state';\r\nimport simpleBind from '../simpleBind';\r\n\r\nstate.filters = { };\r\n\r\nvar getFilteredValue = function(val,filterStr) {\r\n  filterStr = filterStr.split(',');\r\n  for(var i=0; i < filterStr.length; ++i) {\r\n    if(typeof state.filters[filterStr[i]] != 'undefined') {\r\n      val = state.filters[filterStr[i]](val)\r\n    }\r\n  }\r\n  return val;\r\n};\r\n\r\nvar registerFilter = function(filterName,fn) {\r\n  if(typeof fn == 'function') {\r\n    state.filters[filterName] = fn;\r\n  }\r\n};\r\n\r\nsimpleBind.extendNamespace('getFilteredValue',getFilteredValue);\r\nsimpleBind.extendNamespace('registerFilter',registerFilter);\r\n"],"names":["timer","d","document","getType","variable","type","Array","copyArrayWithoutReferences","arr","toReturn","i","length","push","extend","delay","callback","ms","clearTimeout","setTimeout","args","len","src","target","key","isArrayPresent","simpleExtend","extendWithArrayOfObjects","arguments","getKeys","obj","Object","keys","getData","elem","attrs","data","getAttrs","indexOf","substring","attributes","attr","item","nodeName","hasOwnProperty","value","nodeValue","standardObjNameRegex","RegExp","replaceObjNameInStandardFormat","str","oldObj","newObj","replace","val","finalProp","split","pop","shift","bindType","join","evt","createEvent","initEvent","dispatchEvent","fireEvent","bindTypes","bindTypeOpts","boundElems","boundObjects","boundObjectsLast","ready","beforeReadyBindQueue","autoReBinding","autoReBindingQueue","domCollection","base","autoReBind","state","all","getElementsByTagName","opts","util.getData","foundBinding","j","setAttribute","collection","processAutoRebindingQueue","processBoundElems","elems","flush","binding","addEventListener","lib","bind","name","init","window","simpleBind","util","getState","registerBindType","selector","collectionRoutine","bindingRoutine","addToBoundElems","objName","configObj","recollectDOM","context","util.extend","extendNamespace","method","simplebind","objKey","config","get","getFilteredValue","simplefilter","JSON","stringify","simplebindhtml","innerHTML","childNodes","appendChild","createTextNode","bindHandlers","simplebindhandler","handler","oldVal","handlerName","func","eventDispatchMarker","changeInitiatorMarker","handleInput","this","getAttribute","removeAttribute","set","getInputValue","originalObjName","repeatDictionary","rateLimitInput","call","getInputType","tagName","toLowerCase","checked","simplebindvalue","inputType","initiatedChange","attachAppropriateEventHandlers","input","currVal","String","radioVal","checkIfInputValueChanged","selIndex","selectedIndex","setValue","triggerEvent","repeatCount","getNewBindingName","count","repeatIndex","innerObjName","rewriteBindings","newObjName","newBindingVal","replaceObjNameInBindingStr","simplerepeat","objNameAndKey","repeatedElems","innerNodes","repeatTemplate","parentNode","removeChild","arrToBind","num","delta","frag","createDocumentFragment","newNode","cloneNode","innards","origBind","newBind","removed","scaleRepeat","eventHandlers","addListener","eventName","eventHandler","includeObjNameAndKey","undefined","events","simpleevent","eventArr","boundAttrs","simplebindattrs","dataProps","simpledata","prop","filters","filterStr","filterName","fn"],"mappings":"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"}