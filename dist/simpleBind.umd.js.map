{"version":3,"file":"simpleBind.umd.js","sources":["../src/bindTypes/const/objNameLocation.js","../src/simpleBindUtil.js","../src/state.js","../src/simpleBind.js","../src/bindTypes/simplebind.js","../src/bindTypes/simplebindhandler.js","../src/bindTypes/simplebindvalue.js","../src/bindTypes/simplerepeat.js","../src/bindTypes/simpleevent.js","../src/bindTypes/simplebindattrs.js","../src/bindTypes/simpledata.js","../src/bindAugmenters/filters.js"],"sourcesContent":["export const FIRST_IN_STRING = 'FIRST_IN_STRING';\r\nexport const COLON_SEPARATED_SECOND_GROUP = 'COLON_SEPARATED_SECOND_GROUP';\r\nexport const COLON_SEPARATED_THIRD_GROUP = 'COLON_SEPARATED_THIRD_GROUP';","import * as objNameLocations from './bindTypes/const/objNameLocation';\r\n\r\nvar getType = function(variable) {\r\n  var type = typeof variable;\r\n  switch(type) {\r\n    case 'object':\r\n      if(variable == null) return 'null';\r\n      return variable instanceof Array ? 'array' : type;\r\n    default:\r\n      return type;\r\n  }\r\n};\r\n\r\nexport var delay = (function(){\r\n  var timer = 0;\r\n  return function(callback, ms){\r\n    clearTimeout (timer);\r\n    timer = setTimeout(callback, ms);\r\n  };\r\n})();\r\n\r\nvar copyArrayWithoutReferences = function (arr) {\r\n  var toReturn = [];\r\n  for (var i = 0; i < arr.length; ++i) {\r\n    var type = getType(arr[i]);\r\n    switch (type) {\r\n      case 'object':\r\n        toReturn.push(extend({}, arr[i]));\r\n        break;\r\n      case 'array':\r\n        toReturn.push(copyArrayWithoutReferences(arr[i]));\r\n        break;\r\n      default:\r\n        toReturn.push(arr[i]);\r\n        break;\r\n    }\r\n  }\r\n  return toReturn;\r\n};\r\n\r\nexport var extend = function() {\r\n  for (var i = 1, len = arguments.length; i < len; ++i) {\r\n    var src = arguments[i]\r\n      , target = arguments[0];\r\n    for (var key in src) {\r\n      var isArrayPresent = getType(src[key]) === 'array';\r\n      var simpleExtend = getType(target[key]) != 'object' && getType(src[key]) != 'object' && !isArrayPresent;\r\n      if (simpleExtend) {\r\n        target[key] = src[key];\r\n      } else {\r\n        target[key] = extend(typeof target[key] == 'undefined' ? { } : target[key],src[key]);\r\n        if (isArrayPresent) {\r\n          target[key] = copyArrayWithoutReferences(src[key]);\r\n        } else {\r\n          target[key] = extend(typeof target[key] == 'undefined' ? {} : target[key], src[key]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return arguments.length ? arguments[0] : { };\r\n};\r\n\r\nexport var getKeys = function(obj) {\r\n  if(Object.keys) {\r\n    return Object.keys(obj);\r\n  } else {\r\n    arr = [];\r\n    for(var key in obj) {\r\n      arr.push(key);\r\n    }\r\n    return arr;\r\n  }\r\n};\r\n\r\nexport var getData = function(elem) {\r\n  var attrs, keys, data = { };\r\n  attrs = getAttrs(elem);\r\n  keys = getKeys(attrs);\r\n  for(var i=0; i < keys.length; ++i) {\r\n    if(keys[i].indexOf('data-') === 0) {\r\n      data[keys[i].substring(5,keys[i].length)] = attrs[keys[i]];\r\n    }\r\n  }\r\n  return data;\r\n};\r\n\r\nexport var getAttrs = function(elem) {\r\n  var attrs, obj = {};\r\n  attrs = elem.attributes;\r\n  for(var i=0; i < attrs.length; ++i) {\r\n    var attr = attrs.item(i);\r\n    obj[attr.nodeName] = (attr.hasOwnProperty('value')) ? attr.value : attr.nodeValue;\r\n  }\r\n  return obj;\r\n};\r\n\r\n// A great function for setting object values\r\n// via a string with dot notation:\r\n// ex) set({x:{y:{z:2}}},'y.z',3)\r\n\r\n// set = function(obj,str,val) {\r\n//   str = str.split('.');\r\n//   while(str.length > 1) {\r\n//     obj = obj[str.shift()];\r\n//   }\r\n//   obj[str.shift()] = val;\r\n// };\r\n\r\n// let's modify this function to be able to\r\n// build an object so we could have SEO friendly\r\n// binds and so that people don't have to rush\r\n// to bind their objects immediately\r\nexport var set = function(obj,str,val) {\r\n  str = str.split('.');\r\n  var finalProp = str.pop();\r\n  while(str.length) {\r\n    var key = str.shift();\r\n    obj[key] = typeof obj[key] == 'undefined' ? { } : obj[key];\r\n    obj = obj[key];\r\n  }\r\n  obj[finalProp] = val;\r\n};\r\n\r\n// Same as above but retrieves the value as a string or as an empty string\r\n// if not set:\r\nexport var get = function(obj,str) {\r\n  if(str == '$base' || str === '') return obj;\r\n  str = str.split('.');\r\n  for(var i=0; i < str.length; ++i) {\r\n    if(str[i] == '$base') {\r\n      return obj;\r\n    } else if(obj == null) {\r\n      return '';\r\n    } else if(typeof obj[str[i]] == 'undefined') {\r\n      return '';\r\n    } else {\r\n      if(obj === null) {\r\n        return '';\r\n      } else {\r\n        obj = obj[str[i]];\r\n      }\r\n    }\r\n  }\r\n  return obj;\r\n};\r\n\r\nlet replaceObjNameInBindingStrSingular = (location,oldName,newName) => str => { \r\n  switch(location) { \r\n    case objNameLocations.FIRST_IN_STRING: \r\n      str = str.replace(new RegExp(`^${oldName}(\\.)?`), `${newName}$1`);\r\n      return str; \r\n    case objNameLocations.COLON_SEPARATED_SECOND_GROUP: \r\n      str = str.replace(new RegExp(`^([^:]+:)${oldName}(\\\\.)?`),`$1${newName}$2`);\r\n      return str; \r\n    case objNameLocations.COLON_SEPARATED_THIRD_GROUP: \r\n      str = str.replace(new RegExp(`^([^:]+:[^:]+:)${oldName}(\\\\.)?`),`$1${newName}$2`);\r\n      return str; \r\n  }\r\n};\r\n\r\nexport function replaceObjNameInBindingStr(str,bindTypeOpts,oldName,newName) { \r\n  return str.split(',')\r\n            .map(replaceObjNameInBindingStrSingular(bindTypeOpts.objNameLocation,oldName,newName))\r\n            .join(','); \r\n}\r\n\r\nexport var triggerEvent = function(elem,type){\r\n  if('createEvent' in document) {\r\n    var evt = document.createEvent('HTMLEvents');\r\n    evt.initEvent(type,false,true);\r\n    elem.dispatchEvent(evt);\r\n  } else {\r\n    elem.fireEvent('on' + type);\r\n  }\r\n};","export default { \r\n  bindTypes: [ ], \r\n  bindTypeOpts: { }, \r\n  boundElems: { }, \r\n  boundObjects: { }, \r\n  boundObjectsLast: { }, \r\n  ready: false,\r\n  beforeReadyBindQueue: [ ], \r\n  autoReBinding: false, \r\n  autoReBindingQueue: { }, \r\n  plugins: []\r\n};","import * as util from './simpleBindUtil';\r\nimport state from './state';\r\n\r\nvar d = document;\r\n\r\nvar init = function() { \r\n  domCollection();\r\n  state.ready = true; \r\n  if(state.beforeReadyBindQueue.length) { \r\n    for(var i=0; i < state.beforeReadyBindQueue.length; ++i) { \r\n      lib.bind(state.beforeReadyBindQueue[i].name,state.beforeReadyBindQueue[i].obj);\r\n    }\r\n  }\r\n}; \r\n\r\nvar domCollection = function(base,autoReBind=false) { \r\n  if(autoReBind) { \r\n    state.autoReBinding = true; \r\n    state.autoReBindingQueue = { }; \r\n  } \r\n  base = (typeof base == 'undefined') ? d : base;\r\n  var all = base.getElementsByTagName('*');\r\n  for(var i=0; i < all.length; ++i) {\r\n    var opts = util.getData(all[i]);\r\n    if(typeof opts['simplebindcollected'] == 'undefined') { \r\n      var foundBinding = false; \r\n      for(var j=0; j < state.bindTypes.length; ++j) { \r\n        if(typeof opts[state.bindTypes[j]] != 'undefined') { \r\n          if(!foundBinding) { \r\n            foundBinding = true;  \r\n            all[i].setAttribute('data-simplebindcollected','true'); \r\n          }\r\n          opts.bindType = state.bindTypes[j]; \r\n          state.bindTypeOpts[state.bindTypes[j]].collection(all[i],opts); \r\n        }\r\n      }\r\n    }\r\n  }\r\n  if(autoReBind) { \r\n    state.autoReBinding = false; \r\n    processAutoRebindingQueue(); \r\n  } \r\n}; \r\n\r\nvar processBoundElems = function(elems,obj,flush) { \r\n  flush = typeof flush == 'undefined' ? false : flush;\r\n  for(var i=0; i < elems.length; ++i) { \r\n    if(state.bindTypeOpts[elems[i].bindType].binding) { \r\n      state.bindTypeOpts[elems[i].bindType].binding(elems[i],obj,flush); \r\n    }\r\n  }\r\n}; \r\n\r\nvar processAutoRebindingQueue = function() { \r\n  for(var key in state.autoReBindingQueue) { \r\n    if(typeof state.boundObjects[key] != 'undefined') { \r\n      processBoundElems(state.autoReBindingQueue[key],state.boundObjects[key],true);\r\n    }\r\n  }\r\n}; \r\n\r\nvar processBindings = function(objName,obj) { \r\n  if(typeof state.boundObjectsLast[objName] == 'undefined') state.boundObjectsLast[objName] = { }; \r\n  state.boundObjects[objName] = obj; \r\n  if(typeof state.boundElems[objName] != 'undefined') { \r\n    processBoundElems(state.boundElems[objName],obj); \r\n    state.boundObjectsLast[objName] = util.extend({},obj);\r\n  }\r\n}; \r\n\r\nlet processPlugins = (lifecycleHook,...args) => {\r\n  switch(lifecycleHook) { \r\n    case 'preBind': \r\n    case 'postBind': \r\n      let [objName,obj] = args;\r\n      state.plugins.forEach(plugin => obj = typeof plugin[lifecycleHook] == 'function' \r\n        ? plugin[lifecycleHook].apply(null,args)\r\n        : obj\r\n      )\r\n      return obj;\r\n  }\r\n};\r\n\r\nd.addEventListener('DOMContentLoaded',function(){\r\n  init();\r\n}); \r\n\r\nvar lib = window.simpleBind || {}; \r\n\r\nlib.util = util;\r\n\r\nlib.getState = function() { \r\n  return state;\r\n}; \r\n\r\nlet defaultBindTypeOpts = { \r\n  binding: null\r\n}; \r\n\r\nlib.registerBindType = function(selector,opts) { \r\n  if(typeof state.bindTypeOpts[selector] == 'undefined') { \r\n    state.bindTypeOpts[selector] = { }; \r\n    state.bindTypes.push(selector); \r\n  }\r\n  util.extend(state.bindTypeOpts[selector],defaultBindTypeOpts,opts);\r\n}; \r\n\r\nlib.addToBoundElems = function(bindType,objName,configObj) { \r\n  configObj.bindType = bindType; \r\n  if(typeof state.boundElems[objName] == 'undefined') state.boundElems[objName] = []; \r\n  if(state.autoReBinding) { \r\n    if(typeof state.autoReBindingQueue[objName] == 'undefined') state.autoReBindingQueue[objName] = []; \r\n    state.autoReBindingQueue[objName].push(configObj);      \r\n  }\r\n  state.boundElems[objName].push(configObj); \r\n}; \r\n\r\nlib.recollectDOM = function(context,autoReBind) { \r\n  domCollection(context,autoReBind);\r\n}; \r\n\r\n\r\nlet pluginDefaults = { \r\n  preBind: null,\r\n  postBind: null,\r\n  name: ''\r\n}; \r\n\r\nlib.registerPlugin = (opts={}) => { \r\n  state.plugins.push(util.extend({},pluginDefaults,opts));\r\n}; \r\n\r\nlib.bind = function(objName,obj) {\r\n  if(typeof objName == 'string' && typeof obj != 'undefined') {\r\n    if(typeof state.boundElems[objName] == 'undefined') state.boundElems[objName] = [];\r\n    if(state.ready) { \r\n      obj = processPlugins('preBind',objName,obj); \r\n      processBindings(objName,obj);\r\n      obj = processPlugins('postBind',objName,obj);\r\n    } else { \r\n      state.beforeReadyBindQueue.push({name: objName, obj: obj});\r\n    }\r\n  }\r\n}; \r\n\r\nlib.extendNamespace = function(name,method) { \r\n  lib[name] = method;\r\n}; \r\n\r\nexport default lib; ","import state from '../state';\r\nimport simpleBind from '../simpleBind';\r\nimport { FIRST_IN_STRING } from './const/objNameLocation';\r\n\r\nvar collection = function(elem,opts){\r\n  // collection routine, the function that defines the object stored in boundElems\r\n  opts.simplebind = opts.simplebind.split('.');\r\n  var configObj = {\r\n    elem: elem,\r\n    objName: opts.simplebind.shift(),\r\n    objKey: opts.simplebind.join('.'),\r\n    opts: opts\r\n  };\r\n  simpleBind.addToBoundElems('simplebind',configObj.objName,configObj);\r\n};\r\n\r\nvar binding = function(config,obj,flush){\r\n  // binding routine, the function that determines how binding is done for this bind type\r\n  var val = simpleBind.util.get(obj,config.objKey);\r\n  var oldVal = simpleBind.util.get(state.boundObjectsLast[config.objName],config.objKey);\r\n  if(val !== oldVal || flush) {\r\n    if(typeof config.opts['simplefilter'] != 'undefined') {\r\n      val = simpleBind.getFilteredValue(val,config.opts.simplefilter);\r\n    }\r\n    val = typeof val == 'string' ? val : JSON.stringify(val,null,2);\r\n    if(typeof config.opts['simplebindhtml'] != 'undefined' && config.opts.simplebindhtml==\"true\") {\r\n      config.elem.innerHTML = val;\r\n    } else {\r\n      if(config.elem.childNodes.length) {\r\n        config.elem.childNodes[0].nodeValue = val;\r\n      } else {\r\n        config.elem.appendChild(document.createTextNode(val));\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n// uses default objNameRegex ('data-simplebind=\"objName.objKey\"')\r\nsimpleBind.registerBindType('simplebind',{\r\n  collection, \r\n  binding,\r\n  objNameLocation: FIRST_IN_STRING\r\n});","import state from '../state';\r\nimport simpleBind from '../simpleBind';\r\nimport { COLON_SEPARATED_SECOND_GROUP } from './const/objNameLocation';\r\n\r\nstate.bindHandlers = { };\r\n\r\nvar collection = function(elem,opts){\r\n  // collection routine, the function that defines the object stored in boundElems\r\n  var bindHandlers = opts.simplebindhandler.split(',');\r\n  for(var i=0; i < bindHandlers.length; ++i) {\r\n    bindHandlers[i] = bindHandlers[i].split(':');\r\n    var configObj = {\r\n      elem: elem,\r\n      handler: bindHandlers[i].shift()\r\n    };\r\n    bindHandlers[i] = bindHandlers[i].shift().split('.');\r\n    configObj.objName = bindHandlers[i].shift();\r\n    configObj.objKey = bindHandlers[i].join('.');\r\n    simpleBind.addToBoundElems('simplebindhandler',configObj.objName,configObj);\r\n  }\r\n};\r\n\r\nvar binding = function(config,obj,flush){\r\n  // binding routine, the function that determines how binding is done for this bind type\r\n  if(typeof state.bindHandlers[config.handler] != 'undefined') {\r\n    var val = simpleBind.util.get(obj,config.objKey)\r\n      , oldVal = simpleBind.util.get(state.boundObjectsLast[config.objName],config.objKey);\r\n    var change = typeof val == 'object' ? JSON.stringify(val) != JSON.stringify(oldVal) : val != oldVal;\r\n    if(change || flush) {\r\n      state.bindHandlers[config.handler](config.elem,simpleBind.util.get(obj,config.objKey),config.objName);\r\n    }\r\n  }\r\n};\r\n\r\nvar registerBindHandler = function(handlerName,func) {\r\n  if(typeof func == 'function') {\r\n    state.bindHandlers[handlerName] = func;\r\n  }\r\n};\r\n\r\n\r\nsimpleBind.registerBindType('simplebindhandler', {\r\n  collection,\r\n  binding,\r\n  objNameLocation: COLON_SEPARATED_SECOND_GROUP\r\n});\r\nsimpleBind.extendNamespace('registerBindHandler', registerBindHandler);","import state from '../state';\r\nimport simpleBind from '../simpleBind';\r\nimport { FIRST_IN_STRING } from './const/objNameLocation';\r\n\r\n// define two flags that are used to help us determine flow/bubbling and prevent indefinite recursion: \r\n//  1. eventDispatchMarker: this is applied when we programatically trigger a change event on an input\r\n//  2. changeInitiatorMarker: this is applied to bindvalue input when it invokes a change \r\nvar eventDispatchMarker = 'data-simpleeventdispatch'\r\n  , changeInitiatorMarker = 'data-simplebindvaluechanger';\r\n\r\n/**\r\n * handleInput() is an event callback to handle changes to simplebindvalue-bound inputs\r\n */\r\nvar handleInput = function() {\r\n  // check if we are simply dispatching an event from the bindingRoutine callback\r\n  if(this.getAttribute(eventDispatchMarker)) return this.removeAttribute(eventDispatchMarker);\r\n  // we are not, we need to update other items that are bound to same object.property: \r\n  var binding = this.getAttribute('data-simplebindvalue').split('.')\r\n    , objName = binding.shift();\r\n  // in case this object hasn't been set yet, for whatever reason, set it to a blank object:\r\n  if(typeof state.boundObjects[objName] == 'undefined') state.boundObjects[objName] = {};\r\n  this.setAttribute(changeInitiatorMarker,'true');\r\n  simpleBind.util.set(state.boundObjects[objName],binding.join('.'),getInputValue(this));\r\n  simpleBind.bind(objName,state.boundObjects[objName]);\r\n  if(objName.indexOf('__repeat') > -1) {\r\n    var originalObjName = state.repeatDictionary[objName.split('-').shift()];\r\n    simpleBind.bind(originalObjName,state.boundObjects[originalObjName]);\r\n  }\r\n};\r\n\r\nvar rateLimitInput = function() {\r\n  var elem = this;\r\n  simpleBind.util.delay(function(){\r\n    handleInput.call(elem);\r\n  },50)\r\n};\r\n\r\nvar getInputType = function(elem) {\r\n  var type, tagName = elem.tagName.toLowerCase();\r\n  switch(tagName) {\r\n    case 'input':\r\n      type = elem.getAttribute('type');\r\n      return type;\r\n    default:\r\n      return tagName;\r\n  }\r\n};\r\n\r\nvar checkIfInputValueChanged = function(input,currVal) {\r\n  var type = getInputType(input);\r\n  // for checkboxes and radio inputs, it is necessary to account for \r\n  // string vs boolean comparisons since the value attribute on an \r\n  // input is always a string: \r\n  switch(type) {\r\n    case 'checkbox':\r\n      return String(input.checked) != String(currVal);\r\n      return false;\r\n    case 'radio':\r\n      var radioVal = getInputValue(input);\r\n      return (input.checked && radioVal != String(currVal)) || (!input.checked && radioVal == String(currVal));\r\n    default:\r\n      return currVal != getInputValue(input);\r\n  }\r\n};\r\n\r\nvar getInputValue = function(elem) {\r\n  var type = getInputType(elem);\r\n  switch(type) {\r\n    case 'checkbox':\r\n      return elem.checked;\r\n    default:\r\n      return elem.value;\r\n  }\r\n};\r\n\r\nvar attachAppropriateEventHandlers = function(elem,inputType) {\r\n  switch(inputType) {\r\n    case 'text':\r\n    case 'tel':\r\n    case 'password':\r\n    case 'textarea':\r\n    case 'number': \r\n    case 'email': \r\n    case 'zip':\r\n    case 'time':\r\n      elem.addEventListener('keyup',rateLimitInput);\r\n    default:\r\n      elem.addEventListener('change',handleInput);\r\n      break;\r\n  }\r\n};\r\n\r\nvar setValue = function(config,val) {\r\n  switch(config.inputType) {\r\n    case 'select':\r\n      var opts = config.elem.getElementsByTagName('option');\r\n      var selIndex = 0;\r\n      for(var i=0; i < opts.length; ++i) {\r\n        if(opts[i].value == val) {\r\n          selIndex = i;\r\n          break;\r\n        }\r\n      }\r\n      config.elem.selectedIndex = selIndex;\r\n      break;\r\n    case 'radio':\r\n      config.elem.checked = String(val) == config.elem.value;\r\n      break;\r\n    case 'checkbox':\r\n      config.elem.checked = (val === true || val == 'true');\r\n      break;\r\n    case 'textarea':\r\n      if(config.elem.innerHTML != val) {\r\n        config.elem.innerHTML = val;\r\n      }\r\n      break;\r\n    case 'text':\r\n    default:\r\n      if(val != config.elem.value || flush) {\r\n        config.elem.value = val;\r\n      }\r\n      break;\r\n  }\r\n};\r\n\r\nvar collection = function(elem,opts){\r\n  // collection routine, the function that defines the object stored in boundElems\r\n  opts.simplebindvalue = opts.simplebindvalue.split('.');\r\n  var configObj = {\r\n    elem: elem,\r\n    objName: opts.simplebindvalue.shift(),\r\n    objKey: opts.simplebindvalue.join('.'),\r\n    inputType: getInputType(elem),\r\n    initiatedChange: false\r\n  };\r\n  attachAppropriateEventHandlers(elem,configObj.inputType);\r\n  simpleBind.addToBoundElems('simplebindvalue',configObj.objName,configObj);\r\n};\r\n\r\nvar binding = function(config,obj,flush){\r\n  // binding routine, the function that determines how binding is done for this bind type\r\n  var val = simpleBind.util.get(obj,config.objKey);\r\n  if(checkIfInputValueChanged(config.elem,val)) {\r\n    // check if this is the element that invoked the change: \r\n    if(config.elem.getAttribute(changeInitiatorMarker)) {\r\n      config.elem.removeAttribute(changeInitiatorMarker);\r\n    } else {\r\n      // it wasn't, so we need to trigger a change event:\r\n      setValue(config,val);\r\n      config.elem.setAttribute(eventDispatchMarker,'true');\r\n      simpleBind.util.triggerEvent(config.elem,'change');\r\n    }\r\n  } else {\r\n    if(config.elem.getAttribute(changeInitiatorMarker)) {\r\n      config.elem.removeAttribute(changeInitiatorMarker);\r\n    }\r\n  }\r\n};\r\n\r\n// uses default objNameRegex\r\n\r\nsimpleBind.registerBindType('simplebindvalue',{\r\n  collection,\r\n  binding,\r\n  objNameLocation: FIRST_IN_STRING\r\n});","import state from '../state';\r\nimport simpleBind from '../simpleBind';\r\nimport { COLON_SEPARATED_SECOND_GROUP } from './const/objNameLocation';\r\n\r\nstate.repeatCount = 0;\r\nstate.repeatDictionary = { };\r\n\r\nvar getNewBindingName = function(config,count) {\r\n  return '__repeat' + config.repeatIndex + '-' + config.innerObjName + count;\r\n};\r\n\r\n/**\r\n * rewriteBindings() takes a list of elements and rewrites any simplebind binding\r\n * properties from a specified original object name to a specified new object name\r\n *\r\n * @param    {Array}     elems              Nodelist of elements to be processed\r\n * @param    {String}    originalObjName    Original objName to replace\r\n * @param    {String}    newObjName         New objName to replace original\r\n */\r\nvar rewriteBindings = function(elems,originalObjName,newObjName) {\r\n  for(var i=0; i < elems.length; ++i) {\r\n    for(var j=0; j < state.bindTypes.length; ++j) {\r\n      var attr = 'data-' + state.bindTypes[j]\r\n        , binding = elems[i].getAttribute(attr);\r\n      if(binding) {\r\n        var newBindingVal = simpleBind.util.replaceObjNameInBindingStr(binding,state.bindTypeOpts[state.bindTypes[j]],originalObjName,newObjName);\r\n        if(newBindingVal != binding) {\r\n          elems[i].setAttribute(attr,newBindingVal);\r\n          elems[i].removeAttribute('data-simplebindcollected');\r\n        } else {\r\n          // If we have made it this far then the element had a binding string on it but it was\r\n          // not a member of the array that was bound.  nonetheless, it needs to be recollected\r\n          // and rebound\r\n          elems[i].removeAttribute('data-simplebindcollected');\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * scaleRepeat takes a repeat block and scales the # of repeated elements up or down:\r\n *\r\n * @param    {Object}    config    simpleRepeat config object (stored in state.boundElems)\r\n * @param    {Number}    num       # of desired repeat elements\r\n */\r\nvar scaleRepeat = function(config,num) {\r\n  if(config.repeatedElems.length == num) return;\r\n  var delta;\r\n  if(config.repeatedElems.length < num) {\r\n    // need to add elems\r\n    delta = num - config.repeatedElems.length;\r\n    var frag = document.createDocumentFragment();\r\n    for(var i=0; i < delta; ++i) {\r\n      var newNode = config.repeatTemplate.cloneNode(true)\r\n        , innards = newNode.getElementsByTagName('*')\r\n        , origBind = getNewBindingName(config,0)\r\n        , newBind = getNewBindingName(config,config.repeatedElems.length);\r\n      // rebind the base-level node: \r\n      rewriteBindings([newNode],origBind,newBind);\r\n      // & then the children: \r\n      rewriteBindings(innards,origBind,newBind);\r\n      config.repeatedElems.push(newNode);\r\n      frag.appendChild(newNode);\r\n    }\r\n    config.elem.appendChild(frag);\r\n    simpleBind.recollectDOM(config.elem,true);\r\n  } else {\r\n    // need to remove elems\r\n    delta = config.repeatedElems.length - num;\r\n    for(var i=0; i < delta; ++i) {\r\n      var removed = config.repeatedElems.pop();\r\n      var objName  = getNewBindingName(config,config.repeatedElems.length);\r\n      removed.parentNode.removeChild(removed);\r\n      if(typeof state.boundElems[objName] != 'undefined') delete state.boundElems[objName];\r\n      if(typeof state.boundObjects[objName] != 'undefined') delete state.boundObjects[objName];\r\n      if(typeof state.boundObjectsLast[objName] != 'undefined') delete state.boundObjectsLast[objName];\r\n    }\r\n  }\r\n};\r\n\r\nvar collection = function(elem,opts){\r\n  // collection routine, the function that defines the object stored in boundElems\r\n  opts.simplerepeat = opts.simplerepeat.split(':');\r\n  var objNameAndKey = opts.simplerepeat.pop().split('.');\r\n  var configObj = {\r\n    elem: elem,\r\n    objName: objNameAndKey.shift(),\r\n    objKey: objNameAndKey.join('.'),\r\n    innerObjName: opts.simplerepeat.shift(),\r\n    repeatedElems: [ ],\r\n    repeatIndex: state.repeatCount\r\n  };\r\n  var innerNodes = elem.getElementsByTagName('*');\r\n  rewriteBindings(innerNodes,configObj.innerObjName,getNewBindingName(configObj,0));\r\n  configObj.repeatTemplate = innerNodes[0].parentNode.removeChild(innerNodes[0]);\r\n  state.repeatDictionary['__repeat' + configObj.repeatIndex] = configObj.objName;\r\n  ++state.repeatCount;\r\n  simpleBind.addToBoundElems('simplerepeat',configObj.objName,configObj);\r\n};\r\n\r\nvar binding = function(config,obj,flush){\r\n  // binding routine, the function that determines how binding is done for this bind type\r\n  var arrToBind = simpleBind.util.get(obj,config.objKey) || [];\r\n  if(typeof arrToBind['length'] != 'undefined') {\r\n    scaleRepeat(config,arrToBind.length);\r\n    for(var i=0; i < arrToBind.length; ++i) {\r\n      simpleBind.bind(getNewBindingName(config,i),arrToBind[i]);\r\n    }\r\n  }\r\n};\r\n\r\nsimpleBind.registerBindType('simplerepeat', {\r\n  collection,\r\n  binding,\r\n  objNameLocation: COLON_SEPARATED_SECOND_GROUP\r\n});\r\nsimpleBind.extendNamespace('rewriteBindings',rewriteBindings);","import state from '../state';\r\nimport simpleBind from '../simpleBind';\r\nimport { COLON_SEPARATED_THIRD_GROUP } from './const/objNameLocation';\r\n\r\n/*\r\n\r\n  Events take the form: 'eventName:eventHandlerName:optionalObjName.key.key'\r\n    ex: 'click:myClickHandler:someObj.key.key2'\r\n    or\r\n    ex: 'click:myClickHandler'     // omitting the object &\r\n                                      key specifier if not needed\r\n\r\n  In above examples, 'myClickHandler' must be registered by calling:\r\n    ex: simpleBind.registerEvent('myClickHandler',function(event,value){});\r\n    or\r\n    ex: simpleBind.registerEvent('myClickHandler',function(event){});\r\n  respectively.\r\n\r\n  Multiple events can be specified as comma-separated values within\r\n  the data-simpleevent parameter.\r\n    ex: data-simpleevent=\"click:someEventHandler,hover:someOtherEventHandler\"\r\n\r\n  Whenever an event handler is called it will supply 'this' context to the\r\n  element which emitted the event. (this == element)\r\n\r\n*/\r\n\r\nstate.eventHandlers = { };\r\n\r\nvar addListener = function(elem,eventName,eventHandler,includeObjNameAndKey,objName,objKey) {\r\n  elem.addEventListener(eventName,function(evt){\r\n    if(typeof state.eventHandlers[eventHandler] != 'undefined') {\r\n      if(includeObjNameAndKey) {\r\n        if(typeof state.boundObjects[objName] != 'undefined') {\r\n          state.eventHandlers[eventHandler].call(this,evt, simpleBind.util.get(state.boundObjects[objName],objKey));\r\n          return;\r\n        }\r\n      }\r\n      // still call the event handler even if it obj is undefined\r\n      return state.eventHandlers[eventHandler].call(this,evt,undefined);\r\n    }\r\n  });\r\n};\r\n\r\nvar collection = function(elem,opts) {\r\n  var events = opts.simpleevent.split(',');\r\n  for(var i=0; i < events.length; ++i) {\r\n    var eventArr = events[i].split(':')\r\n      , eventName = eventArr.shift()\r\n      , eventHandler = eventArr.shift();\r\n    var objNameAndKey = eventArr.length ? eventArr.shift().split('.') : false;\r\n    if(objNameAndKey) {\r\n      var objName = objNameAndKey.shift()\r\n        , objKey = objNameAndKey.join('.');\r\n        addListener(elem,eventName,eventHandler,objNameAndKey,objName,objKey);\r\n    } else {\r\n      addListener(elem,eventName,eventHandler,objNameAndKey);\r\n    }\r\n  }\r\n};\r\n\r\nvar binding = null;\r\n\r\nvar registerEvent = function(eventName,func) {\r\n  state.eventHandlers[eventName] = func;\r\n};\r\n\r\nsimpleBind.registerBindType('simpleevent',{\r\n  collection,\r\n  binding,\r\n  objNameLocation: COLON_SEPARATED_THIRD_GROUP\r\n});\r\nsimpleBind.extendNamespace('registerEvent', registerEvent);","import state from '../state';\r\nimport simpleBind from '../simpleBind';\r\nimport { COLON_SEPARATED_SECOND_GROUP } from './const/objNameLocation';\r\n\r\nvar collection = function(elem,opts){\r\n  // collection routine, the function that defines the object stored in boundElems\r\n  var boundAttrs = opts.simplebindattrs.split(',');\r\n  for(var i=0; i < boundAttrs.length; ++i) {\r\n    boundAttrs[i] =  boundAttrs[i].split(':');\r\n    var configObj = {\r\n      elem: elem,\r\n      attr: boundAttrs[i].shift()\r\n    };\r\n    boundAttrs[i] = boundAttrs[i].shift().split('.');\r\n    configObj.objName = boundAttrs[i].shift();\r\n    configObj.objKey = boundAttrs[i].join('.');\r\n    simpleBind.addToBoundElems('simplebindattrs',configObj.objName,configObj);\r\n  }\r\n};\r\n\r\nvar binding = function(config,obj,flush){\r\n  // binding routine, the function that determines how binding is done for this bind type\r\n  var val = simpleBind.util.get(obj,config.objKey)\r\n    , oldVal = simpleBind.util.get(state.boundObjectsLast[config.objName],config.objKey);\r\n  if(val != oldVal || flush) {\r\n    config.elem.setAttribute(config.attr,val);\r\n  }\r\n};\r\n\r\nsimpleBind.registerBindType('simplebindattrs',{\r\n  collection,\r\n  binding,\r\n  objNameLocation: COLON_SEPARATED_SECOND_GROUP\r\n});","import state from '../state';\r\nimport simpleBind from '../simpleBind';\r\nimport { COLON_SEPARATED_SECOND_GROUP } from './const/objNameLocation';\r\n\r\n// takes form: data-simpledata=\"thisProp:objName.objKey,otherProp:objName.objKey\"\r\nvar collection = function(elem,opts){\r\n  // collection routine, the function that defines the object stored in boundElems\r\n  var dataProps = opts.simpledata.split(',');\r\n  for(var i=0; i < dataProps.length; ++i) {\r\n    var arr = dataProps[i].split(':')\r\n      , prop = arr.shift();\r\n    arr = arr.shift().split('.');\r\n    var configObj = {\r\n      elem: elem,\r\n      objName: arr.shift(),\r\n      objKey: arr.join('.'),\r\n      prop: prop\r\n    }\r\n    simpleBind.addToBoundElems('simpledata',configObj.objName,configObj);\r\n  }\r\n};\r\n\r\nvar binding = function(config,obj){\r\n  // binding routine, the function that determines how binding is done for this bind type\r\n  var prop = 'data-' + config.prop.replace(/\\W+/g, '-').replace(/([a-z\\d])([A-Z])/g, '$1-$2');\r\n  config.elem.setAttribute(prop, simpleBind.util.get(obj,config.objKey));\r\n};\r\n\r\nsimpleBind.registerBindType('simpledata',{\r\n  collection,\r\n  binding,\r\n  objNameLocation: COLON_SEPARATED_SECOND_GROUP\r\n});","import state from '../state';\r\nimport simpleBind from '../simpleBind';\r\n\r\nstate.filters = { };\r\n\r\nvar getFilteredValue = function(val,filterStr) {\r\n  filterStr = filterStr.split(',');\r\n  for(var i=0; i < filterStr.length; ++i) {\r\n    if(typeof state.filters[filterStr[i]] != 'undefined') {\r\n      val = state.filters[filterStr[i]](val)\r\n    }\r\n  }\r\n  return val;\r\n};\r\n\r\nvar registerFilter = function(filterName,fn) {\r\n  if(typeof fn == 'function') {\r\n    state.filters[filterName] = fn;\r\n  }\r\n};\r\n\r\nsimpleBind.extendNamespace('getFilteredValue',getFilteredValue);\r\nsimpleBind.extendNamespace('registerFilter',registerFilter);"],"names":["const","timer","FIRST_IN_STRING","COLON_SEPARATED_SECOND_GROUP","COLON_SEPARATED_THIRD_GROUP","getType","variable","type","Array","delay","callback","ms","clearTimeout","setTimeout","copyArrayWithoutReferences","arr","toReturn","i","length","push","extend","len","arguments","src","target","key","isArrayPresent","simpleExtend","getKeys","obj","Object","keys","getData","elem","attrs","data","getAttrs","indexOf","substring","attributes","attr","item","nodeName","hasOwnProperty","value","nodeValue","str","val","finalProp","split","pop","shift","bindTypeOpts","oldName","newName","map","location","objNameLocation","objNameLocations.FIRST_IN_STRING","replace","RegExp","objNameLocations.COLON_SEPARATED_SECOND_GROUP","objNameLocations.COLON_SEPARATED_THIRD_GROUP","join","document","evt","createEvent","initEvent","dispatchEvent","fireEvent","bindTypes","boundElems","boundObjects","boundObjectsLast","ready","beforeReadyBindQueue","autoReBinding","autoReBindingQueue","plugins","d","domCollection","base","autoReBind","state","all","getElementsByTagName","opts","util.getData","foundBinding","j","setAttribute","bindType","collection","processAutoRebindingQueue","processBoundElems","elems","flush","binding","processPlugins","lifecycleHook","forEach","plugin","apply","args","addEventListener","lib","bind","name","init","window","simpleBind","util","getState","let","defaultBindTypeOpts","registerBindType","selector","util.extend","addToBoundElems","objName","configObj","recollectDOM","context","pluginDefaults","preBind","postBind","registerPlugin","extendNamespace","method","simplebind","objKey","config","get","getFilteredValue","simplefilter","JSON","stringify","simplebindhtml","innerHTML","childNodes","appendChild","createTextNode","bindHandlers","simplebindhandler","handler","oldVal","handlerName","func","eventDispatchMarker","changeInitiatorMarker","handleInput","this","getAttribute","removeAttribute","set","getInputValue","originalObjName","repeatDictionary","rateLimitInput","call","getInputType","tagName","toLowerCase","checked","simplebindvalue","inputType","initiatedChange","attachAppropriateEventHandlers","input","currVal","String","radioVal","checkIfInputValueChanged","selIndex","selectedIndex","setValue","triggerEvent","repeatCount","getNewBindingName","count","repeatIndex","innerObjName","rewriteBindings","newObjName","newBindingVal","replaceObjNameInBindingStr","simplerepeat","objNameAndKey","repeatedElems","innerNodes","repeatTemplate","parentNode","removeChild","arrToBind","num","delta","frag","createDocumentFragment","newNode","cloneNode","innards","origBind","newBind","removed","scaleRepeat","eventHandlers","addListener","eventName","eventHandler","includeObjNameAndKey","undefined","events","simpleevent","eventArr","boundAttrs","simplebindattrs","dataProps","simpledata","prop","filters","filterStr","filterName","fn"],"mappings":"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"}